name: Deploy
inputs:
  ecr_username:
    required: true
  ecr_password:
    required: true
  ecr_url:
    required: true
  environment:
    required: true
    description: "Deployment environment. 'production' or 'staging'"
runs:
  using: "composite"
  steps:
    - uses: docker/setup-buildx-action@v1

    - uses: actions/cache@v2.1.7
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-v2-${{ github.sha }}
        restore-keys: ${{ runner.os }}-buildx-v2

    - name: Login to ECR
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.ecr_url }}
        username: ${{ inputs.ecr_username }}
        password: ${{ inputs.ecr_password }}

    - name: Docker build
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        build-args: DATABASE_URL=${{ inputs.database_url }},NEXT_PUBLIC_WEBAPP_URL=${{ inputs.webapp_url }}
        tags: ${{ inputs.ecr_url }}/tourlane/cal:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
    - name: Move cache
      shell: bash
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Run deploy command
      run: make deploy_to_${{ inputs.environment }}
      env:
        NEXT_PUBLIC_WEBAPP_URL: ${{ inputs.webapp_url }}
        AWS_ACCESS_KEY_ID: ${{ inputs.ecr_username }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.ecr_password }}
        AWS_ECR_URL: ${{ inputs.ecr_url }}
      shell: bash

    #- id: git_message
      #shell: bash
      #run: echo "::set-output name=short::$(echo "${{ github.event.head_commit.message }}" | head -1)"

    #- name: Slack Notification
      #uses: rtCamp/action-slack-notify@v2
      #env:
        #SLACK_CHANNEL: ${{ inputs.environment == 'staging' && 'deploys-staging' || 'deploys' }}
        #SLACK_ICON_EMOJI: ':family:'
        #SLACK_FOOTER: ${{ inputs.environment == 'staging' && 'TODO' || 'TODO' }}
        #SLACK_USERNAME: cal
        #MSG_MINIMAL: commit
        #SLACK_WEBHOOK: ${{ secrets.SLACK_URL }}
        #SLACK_MESSAGE: ${{ steps.git_message.outputs.short }}
