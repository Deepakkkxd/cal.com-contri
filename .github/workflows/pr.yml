name: PR Update

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  node_version: ${{ secrets.NODE_VERSION }}
  # pr_id: ${{ github.event.number }}
  pr_id: 1

concurrency:
  group: pr-update-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  setup:
    name: Yarn install & cache
    uses: ./.github/workflows/yarn-install.yml
    secrets:
      node_version: ${{ secrets.NODE_VERSION }}

  lint:
    name: Type check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/yarn-install
        with:
          node_version: ${{ secrets.NODE_VERSION }}
      - run: yarn type-check

  lint:
    name: Linters
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/yarn-install
        with:
          node_version: ${{ secrets.NODE_VERSION }}
      - run: yarn lint

  build:
    name: Production build
    needs: setup
    uses: ./.github/workflows/production-build.yml
    secrets:
      node_version: ${{ secrets.NODE_VERSION }}

  e2e-test:
    name: E2E tests
    needs: [lint, build]
    uses: ./.github/workflows/yarn-e2e.yml
    secrets:
      node_version: ${{ secrets.NODE_VERSION }}

  analyze:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        # change this if your nextjs app does not live at the root of the repo
        working-directory: ./apps/web/
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/yarn-install
        with:
          node_version: ${{ env.node_version }}
      - name: Restore production build from cache
        uses: actions/cache@v3
        env:
          cache-name: prod-build
          key-1: ${{ secrets.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}
          key-2: ${{ hashFiles('apps/web/next.config.js') }}
        with:
          path: |
            apps/web/.next
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.key-1 }}-${{ env.key-2 }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ env.key-1 }}-${{ env.key-2 }}-
            ${{ runner.os }}-${{ env.cache-name }}-${{ env.key-1 }}-
      # Here's the first place where next-bundle-analysis' own script is used
      # This step pulls the raw bundle stats for the current bundle
      - name: Analyze bundle
        run: npx -p nextjs-bundle-analysis report

      - name: Upload bundle
        uses: actions/upload-artifact@v2
        with:
          name: bundle
          path: apps/web/.next/analyze/__bundle_analysis.json

      - name: Download base branch bundle stats
        uses: dawidd6/action-download-artifact@v2
        if: success() && github.event.number
        with:
          workflow: nextjs-bundle-analysis.yml
          branch: ${{ github.event.pull_request.base.ref }}
          path: apps/web/.next/analyze/base

      # And here's the second place - this runs after we have both the current and
      # base branch bundle stats, and will compare them to determine what changed.
      # There are two configurable arguments that come from package.json:
      #
      # - budget: optional, set a budget (bytes) against which size changes are measured
      #           it's set to 350kb here by default, as informed by the following piece:
      #           https://infrequently.org/2021/03/the-performance-inequality-gap/
      #
      # - red-status-percentage: sets the percent size increase where you get a red
      #                          status indicator, defaults to 20%
      #
      # Either of these arguments can be changed or removed by editing the `nextBundleAnalysis`
      # entry in your package.json file.
      - name: Compare with base branch bundle
        if: success() && github.event.number
        run: ls -laR .next/analyze/base && npx -p nextjs-bundle-analysis compare

      - name: Get comment body
        id: get-comment-body
        if: success() && github.event.number
        run: |
          body=$(cat .next/analyze/__bundle_analysis_comment.txt)
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo ::set-output name=body::$body

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        if: success() && github.event.number
        id: fc
        with:
          issue-number: ${{ github.event.number }}
          body-includes: "<!-- __NEXTJS_BUNDLE -->"

      - name: Create Comment
        uses: peter-evans/create-or-update-comment@v1.4.4
        if: success() && github.event.number && steps.fc.outputs.comment-id == 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}

      - name: Update Comment
        uses: peter-evans/create-or-update-comment@v1.4.4
        if: success() && github.event.number && steps.fc.outputs.comment-id != 0
        with:
          issue-number: ${{ github.event.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          edit-mode: replace
