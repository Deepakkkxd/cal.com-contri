name: PR Update

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  node_version: ${{ secrets.NODE_VERSION }}
  pr_id: ${{ github.event.number }}

concurrency:
  group: pr-update-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  setup:
    name: Yarn install & cache
    uses: ./.github/workflows/yarn-install.yml
    secrets:
      node_version: ${{ secrets.NODE_VERSION }}

  lint:
    name: Linters
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        name: Set nodeJs version
        with:
          node-version: ${{ env.node_version }}
      - name: Restore node_modules from cache
        uses: actions/cache@v3
        env:
          cache_name: node-modules-yarn
          cache_fingerprint: ${{ env.node_version }}-${{ hashFiles('yarn.lock') }}
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache_name }}-${{ env.cache_fingerprint }}
      - name: lint the code
        run: yarn lint
  build:
    name: Production build
    needs: setup
    uses: ./.github/workflows/production-build.yml
    with:
      pr_id: ${{ github.event.number }}
    secrets:
      node_version: ${{ secrets.NODE_VERSION }}

  e2e-test:
    name: E2E tests

    runs-on: ubuntu-latest

    needs: [lint, build]

    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        name: Set nodeJs version
        with:
          node-version: ${{ env.node_version }}

      - name: Restore node_modules from cache
        uses: actions/cache@v3
        env:
          cache_name: node-modules-yarn
          cache_fingerprint: ${{ env.node_version }}-${{ hashFiles('yarn.lock') }}
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache_name }}-${{ env.cache_fingerprint }}

        # figure the better way supporting all the packages
      - name: Fake yarn postinstall
        run: yarn playwright install
      - name: Run tests
        run: yarn e2e
