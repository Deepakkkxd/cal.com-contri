diff --git a/node_modules/zod-prisma/dist/zod-prisma.cjs.development.js b/node_modules/zod-prisma/dist/zod-prisma.cjs.development.js
index df60769..eed9fa1 100644
--- a/node_modules/zod-prisma/dist/zod-prisma.cjs.development.js
+++ b/node_modules/zod-prisma/dist/zod-prisma.cjs.development.js
@@ -303,6 +303,7 @@ var generateRelatedSchemaForModel = function generateRelatedSchemaForModel(model
     "extends": ["z.infer<typeof " + modelName(model.name) + ">"],
     properties: relationFields.map(function (f) {
       return {
+        hasQuestionToken: !f.isRequired,
         name: f.name,
         type: "Complete" + f.type + (f.isList ? '[]' : '') + (!f.isRequired ? ' | null' : '')
       };
diff --git a/node_modules/zod-prisma/dist/zod-prisma.cjs.production.min.js b/node_modules/zod-prisma/dist/zod-prisma.cjs.production.min.js
index 1eae6e8..5742ea6 100644
--- a/node_modules/zod-prisma/dist/zod-prisma.cjs.production.min.js
+++ b/node_modules/zod-prisma/dist/zod-prisma.cjs.production.min.js
@@ -1,2 +1,2 @@
-"use strict";var e=require("@prisma/generator-helper"),t=require("typescript"),n=require("zod"),r=require("path"),i=require("ts-morph");function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=a(r),u=n.z.enum(["true","false"]).transform((function(e){return JSON.parse(e)})),l=n.z.object({relationModel:u.default("true").or(n.z.literal("default")),modelSuffix:n.z.string().default("Model"),modelCase:n.z.enum(["PascalCase","camelCase"]).default("PascalCase"),useDecimalJs:u.default("false"),imports:n.z.string().optional(),prismaJsonNullability:u.default("true")}),c=function(e,t,n){return void 0===n&&(n=!0),t.forEach((function(t){return e.write(t).conditionalNewLine(n)}))},s=function(e){var t=e.modelCase,n=e.modelSuffix,r=e.relationModel,i=function(e,r){return void 0===r&&(r=""),"camelCase"===t&&(e=e.slice(0,1).toLowerCase()+e.slice(1)),""+r+e+n};return{modelName:function(e){return i(e,"default"===r?"_":"")},relatedModelName:function(e){return i("default"===r?e.toString():"Related"+e.toString())}}},d=function(e){var t=[];if(e){var n=e.split("\n").filter((function(e){return!e.trimLeft().startsWith("@zod")}));n.length&&(t.push("/**"),n.forEach((function(e){return t.push(" * "+e)})),t.push(" */"))}return t},m=function(e){return e.split("\n").filter((function(e){return e.trimStart().startsWith("@zod")})).flatMap((function(e){return Array.from(e.matchAll(/\.([^().]+\(.*?\))/g),(function(e){return e.slice(1)})).flat()}))},f=function(e,t){void 0===t&&(t=function(e){return e.toString()});var n,r,i="z.unknown()",a=[""];if("scalar"===e.kind)switch(e.type){case"String":i="z.string()";break;case"Int":i="z.number()",a.push("int()");break;case"BigInt":i="z.bigint()";break;case"DateTime":i="z.date()";break;case"Float":case"Decimal":i="z.number()";break;case"Json":i="jsonSchema";break;case"Boolean":i="z.boolean()";break;case"Bytes":i="z.unknown()"}else"enum"===e.kind?i="z.nativeEnum("+e.type+")":"object"===e.kind&&(i=t(e.type));return e.isList&&a.push("array()"),e.documentation&&(i=null!=(n=null==(r=m(e.documentation).find((function(e){return e.startsWith("custom(")})))?void 0:r.slice(7).slice(0,-1))?n:i,a.push.apply(a,m(e.documentation).filter((function(e){return!e.startsWith("custom(")})))),e.isRequired||"Json"===e.type||a.push("nullish()"),""+i+a.join(".")};e.generatorHandler({onManifest:function(){return{version:"0.5.1",prettyName:"Zod Schemas",defaultOutput:"zod"}},onGenerate:function(e){var n=new i.Project,r=e.dmmf.datamodel.models,a=e.schemaPath,u=e.generator.output.value,m=e.otherGenerators.find((function(e){return"prisma-client-js"===e.provider.value})).output.value,p=l.safeParse(e.generator.config);if(!p.success)throw new Error("Incorrect config provided. Please check the values you provided and try again.");var h=p.data,z={clientPath:m,outputPath:u,schemaPath:a},S=n.createSourceFile(u+"/index.ts",{},{overwrite:!0});return function(e,t){e.forEach((function(e){return t.addExportDeclaration({moduleSpecifier:"./"+e.name.toLowerCase()})}))}(r,S),S.formatText({indentSize:2,convertTabsToSpaces:!0,semicolons:t.SemicolonPreference.Remove}),r.forEach((function(e){var r=n.createSourceFile(u+"/"+e.name.toLowerCase()+".ts",{},{overwrite:!0});(function(e,t,n,r){!function(e,t,n,r){var a=r.schemaPath,u=r.outputPath,l=r.clientPath,c=s(n).relatedModelName,d=[{kind:i.StructureKind.ImportDeclaration,namespaceImport:"z",moduleSpecifier:"zod"}];n.imports&&d.push({kind:i.StructureKind.ImportDeclaration,namespaceImport:"imports",moduleSpecifier:o.default.relative(u,o.default.resolve(o.default.dirname(a),n.imports))}),n.useDecimalJs&&e.fields.some((function(e){return"Decimal"===e.type}))&&d.push({kind:i.StructureKind.ImportDeclaration,namedImports:["Decimal"],moduleSpecifier:"decimal.js"});var m=e.fields.filter((function(e){return"enum"===e.kind})),f=e.fields.filter((function(e){return"object"===e.kind})),p=o.default.relative(u,l);if(m.length>0&&d.push({kind:i.StructureKind.ImportDeclaration,isTypeOnly:0===m.length,moduleSpecifier:p,namedImports:m.map((function(e){return e.type}))}),!1!==n.relationModel&&f.length>0){var h=f.filter((function(t){return t.type!==e.name}));h.length>0&&d.push({kind:i.StructureKind.ImportDeclaration,moduleSpecifier:"./index",namedImports:Array.from(new Set(h.flatMap((function(e){return["Complete"+e.type,c(e.type)]}))))})}t.addImportDeclarations(d)}(e,t,n,r),function(e,t,n,r){e.fields.some((function(e){return"Json"===e.type}))&&t.addStatements((function(e){e.newLine(),c(e,["// Helper schema for JSON fields","type Literal = boolean | number | string"+(n.prismaJsonNullability?"":"| null"),"type Json = Literal | { [key: string]: Json } | Json[]","const literalSchema = z.union([z.string(), z.number(), z.boolean()"+(n.prismaJsonNullability?"":", z.null()")+"])","const jsonSchema: z.ZodSchema<Json> = z.lazy(() => z.union([literalSchema, z.array(jsonSchema), z.record(jsonSchema)]))"])})),n.useDecimalJs&&e.fields.some((function(e){return"Decimal"===e.type}))&&t.addStatements((function(e){e.newLine(),c(e,["// Helper schema for Decimal fields","z",".instanceof(Decimal)",".or(z.string())",".or(z.number())",".refine((value) => {","  try {","    return new Decimal(value);","  } catch (error) {","    return false;","  }","})",".transform((value) => new Decimal(value));"])}))}(e,t,n),function(e,t,n,r){var a=s(n);t.addVariableStatement({declarationKind:i.VariableDeclarationKind.Const,isExported:!0,leadingTrivia:function(e){return e.blankLineIfLastNot()},declarations:[{name:(0,a.modelName)(e.name),initializer:function(t){t.write("z.object(").inlineBlock((function(){e.fields.filter((function(e){return"object"!==e.kind})).forEach((function(e){c(t,d(e.documentation)),t.write(e.name+": "+f(e)).write(",").newLine()}))})).write(")")}}]})}(e,t,n),function(e,t){return e.fields.some((function(e){return"object"===e.kind}))&&!1!==t.relationModel}(e,n)&&function(e,t,n,r){var a=s(n),o=a.modelName,u=a.relatedModelName,l=e.fields.filter((function(e){return"object"===e.kind}));t.addInterface({name:"Complete"+e.name,isExported:!0,extends:["z.infer<typeof "+o(e.name)+">"],properties:l.map((function(e){return{name:e.name,type:"Complete"+e.type+(e.isList?"[]":"")+(e.isRequired?"":" | null")}}))}),t.addStatements((function(t){return c(t,["","/**"," * "+u(e.name)+" contains all relations on your model in addition to the scalars"," *"," * NOTE: Lazy required in case of potential circular dependencies within schema"," */"])})),t.addVariableStatement({declarationKind:i.VariableDeclarationKind.Const,isExported:!0,declarations:[{name:u(e.name),type:"z.ZodSchema<Complete"+e.name+">",initializer:function(t){t.write("z.lazy(() => "+o(e.name)+".extend(").inlineBlock((function(){l.forEach((function(e){c(t,d(e.documentation)),t.write(e.name+": "+f(e,u)).write(",").newLine()}))})).write("))")}}]})}(e,t,n)})(e,r,h,z),r.formatText({indentSize:2,convertTabsToSpaces:!0,semicolons:t.SemicolonPreference.Remove})})),n.save()}});
+"use strict";var e=require("@prisma/generator-helper"),t=require("typescript"),n=require("zod"),r=require("path"),i=require("ts-morph");function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=a(r),u=n.z.enum(["true","false"]).transform((function(e){return JSON.parse(e)})),l=n.z.object({relationModel:u.default("true").or(n.z.literal("default")),modelSuffix:n.z.string().default("Model"),modelCase:n.z.enum(["PascalCase","camelCase"]).default("PascalCase"),useDecimalJs:u.default("false"),imports:n.z.string().optional(),prismaJsonNullability:u.default("true")}),c=function(e,t,n){return void 0===n&&(n=!0),t.forEach((function(t){return e.write(t).conditionalNewLine(n)}))},s=function(e){var t=e.modelCase,n=e.modelSuffix,r=e.relationModel,i=function(e,r){return void 0===r&&(r=""),"camelCase"===t&&(e=e.slice(0,1).toLowerCase()+e.slice(1)),""+r+e+n};return{modelName:function(e){return i(e,"default"===r?"_":"")},relatedModelName:function(e){return i("default"===r?e.toString():"Related"+e.toString())}}},d=function(e){var t=[];if(e){var n=e.split("\n").filter((function(e){return!e.trimLeft().startsWith("@zod")}));n.length&&(t.push("/**"),n.forEach((function(e){return t.push(" * "+e)})),t.push(" */"))}return t},m=function(e){return e.split("\n").filter((function(e){return e.trimStart().startsWith("@zod")})).flatMap((function(e){return Array.from(e.matchAll(/\.([^().]+\(.*?\))/g),(function(e){return e.slice(1)})).flat()}))},f=function(e,t){void 0===t&&(t=function(e){return e.toString()});var n,r,i="z.unknown()",a=[""];if("scalar"===e.kind)switch(e.type){case"String":i="z.string()";break;case"Int":i="z.number()",a.push("int()");break;case"BigInt":i="z.bigint()";break;case"DateTime":i="z.date()";break;case"Float":case"Decimal":i="z.number()";break;case"Json":i="jsonSchema";break;case"Boolean":i="z.boolean()";break;case"Bytes":i="z.unknown()"}else"enum"===e.kind?i="z.nativeEnum("+e.type+")":"object"===e.kind&&(i=t(e.type));return e.isList&&a.push("array()"),e.documentation&&(i=null!=(n=null==(r=m(e.documentation).find((function(e){return e.startsWith("custom(")})))?void 0:r.slice(7).slice(0,-1))?n:i,a.push.apply(a,m(e.documentation).filter((function(e){return!e.startsWith("custom(")})))),e.isRequired||"Json"===e.type||a.push("nullish()"),""+i+a.join(".")};e.generatorHandler({onManifest:function(){return{version:"0.5.1",prettyName:"Zod Schemas",defaultOutput:"zod"}},onGenerate:function(e){var n=new i.Project,r=e.dmmf.datamodel.models,a=e.schemaPath,u=e.generator.output.value,m=e.otherGenerators.find((function(e){return"prisma-client-js"===e.provider.value})).output.value,p=l.safeParse(e.generator.config);if(!p.success)throw new Error("Incorrect config provided. Please check the values you provided and try again.");var h=p.data,z={clientPath:m,outputPath:u,schemaPath:a},S=n.createSourceFile(u+"/index.ts",{},{overwrite:!0});return function(e,t){e.forEach((function(e){return t.addExportDeclaration({moduleSpecifier:"./"+e.name.toLowerCase()})}))}(r,S),S.formatText({indentSize:2,convertTabsToSpaces:!0,semicolons:t.SemicolonPreference.Remove}),r.forEach((function(e){var r=n.createSourceFile(u+"/"+e.name.toLowerCase()+".ts",{},{overwrite:!0});(function(e,t,n,r){!function(e,t,n,r){var a=r.schemaPath,u=r.outputPath,l=r.clientPath,c=s(n).relatedModelName,d=[{kind:i.StructureKind.ImportDeclaration,namespaceImport:"z",moduleSpecifier:"zod"}];n.imports&&d.push({kind:i.StructureKind.ImportDeclaration,namespaceImport:"imports",moduleSpecifier:o.default.relative(u,o.default.resolve(o.default.dirname(a),n.imports))}),n.useDecimalJs&&e.fields.some((function(e){return"Decimal"===e.type}))&&d.push({kind:i.StructureKind.ImportDeclaration,namedImports:["Decimal"],moduleSpecifier:"decimal.js"});var m=e.fields.filter((function(e){return"enum"===e.kind})),f=e.fields.filter((function(e){return"object"===e.kind})),p=o.default.relative(u,l);if(m.length>0&&d.push({kind:i.StructureKind.ImportDeclaration,isTypeOnly:0===m.length,moduleSpecifier:p,namedImports:m.map((function(e){return e.type}))}),!1!==n.relationModel&&f.length>0){var h=f.filter((function(t){return t.type!==e.name}));h.length>0&&d.push({kind:i.StructureKind.ImportDeclaration,moduleSpecifier:"./index",namedImports:Array.from(new Set(h.flatMap((function(e){return["Complete"+e.type,c(e.type)]}))))})}t.addImportDeclarations(d)}(e,t,n,r),function(e,t,n,r){e.fields.some((function(e){return"Json"===e.type}))&&t.addStatements((function(e){e.newLine(),c(e,["// Helper schema for JSON fields","type Literal = boolean | number | string"+(n.prismaJsonNullability?"":"| null"),"type Json = Literal | { [key: string]: Json } | Json[]","const literalSchema = z.union([z.string(), z.number(), z.boolean()"+(n.prismaJsonNullability?"":", z.null()")+"])","const jsonSchema: z.ZodSchema<Json> = z.lazy(() => z.union([literalSchema, z.array(jsonSchema), z.record(jsonSchema)]))"])})),n.useDecimalJs&&e.fields.some((function(e){return"Decimal"===e.type}))&&t.addStatements((function(e){e.newLine(),c(e,["// Helper schema for Decimal fields","z",".instanceof(Decimal)",".or(z.string())",".or(z.number())",".refine((value) => {","  try {","    return new Decimal(value);","  } catch (error) {","    return false;","  }","})",".transform((value) => new Decimal(value));"])}))}(e,t,n),function(e,t,n,r){var a=s(n);t.addVariableStatement({declarationKind:i.VariableDeclarationKind.Const,isExported:!0,leadingTrivia:function(e){return e.blankLineIfLastNot()},declarations:[{name:(0,a.modelName)(e.name),initializer:function(t){t.write("z.object(").inlineBlock((function(){e.fields.filter((function(e){return"object"!==e.kind})).forEach((function(e){c(t,d(e.documentation)),t.write(e.name+": "+f(e)).write(",").newLine()}))})).write(")")}}]})}(e,t,n),function(e,t){return e.fields.some((function(e){return"object"===e.kind}))&&!1!==t.relationModel}(e,n)&&function(e,t,n,r){var a=s(n),o=a.modelName,u=a.relatedModelName,l=e.fields.filter((function(e){return"object"===e.kind}));t.addInterface({name:"Complete"+e.name,isExported:!0,extends:["z.infer<typeof "+o(e.name)+">"],properties:l.map((function(e){return{hasQuestionToken:!e.isRequired,name:e.name,type:"Complete"+e.type+(e.isList?"[]":"")+(e.isRequired?"":" | null")}}))}),t.addStatements((function(t){return c(t,["","/**"," * "+u(e.name)+" contains all relations on your model in addition to the scalars"," *"," * NOTE: Lazy required in case of potential circular dependencies within schema"," */"])})),t.addVariableStatement({declarationKind:i.VariableDeclarationKind.Const,isExported:!0,declarations:[{name:u(e.name),type:"z.ZodSchema<Complete"+e.name+">",initializer:function(t){t.write("z.lazy(() => "+o(e.name)+".extend(").inlineBlock((function(){l.forEach((function(e){c(t,d(e.documentation)),t.write(e.name+": "+f(e,u)).write(",").newLine()}))})).write("))")}}]})}(e,t,n)})(e,r,h,z),r.formatText({indentSize:2,convertTabsToSpaces:!0,semicolons:t.SemicolonPreference.Remove})})),n.save()}});
 //# sourceMappingURL=zod-prisma.cjs.production.min.js.map
diff --git a/node_modules/zod-prisma/dist/zod-prisma.esm.js b/node_modules/zod-prisma/dist/zod-prisma.esm.js
index 0543b59..6d02574 100644
--- a/node_modules/zod-prisma/dist/zod-prisma.esm.js
+++ b/node_modules/zod-prisma/dist/zod-prisma.esm.js
@@ -297,6 +297,7 @@ var generateRelatedSchemaForModel = function generateRelatedSchemaForModel(model
     "extends": ["z.infer<typeof " + modelName(model.name) + ">"],
     properties: relationFields.map(function (f) {
       return {
+        hasQuestionToken: !f.isRequired,
         name: f.name,
         type: "Complete" + f.type + (f.isList ? '[]' : '') + (!f.isRequired ? ' | null' : '')
       };
