openapi: 3.0.3
info:
  title: "@calcom/api: Public API for Cal.com"
  version: 1.0.0
externalDocs:
  description: "Find more info at our main docs: https://docs.cal.com/"
  url: https://docs.cal.com
servers:
- url: http://localhost:3002/v1
- url: https://api.cal.dev/v1
- url: https://api.cal.com/v1
security:
- ApiKeyAuth: []
tags:
- name: users
- name: event-types
- name: bookings
- name: attendees
- name: payments
- name: schedules
- name: teams
- name: memberships
- description: Allows modifying unique availabilities tied to a schedule.
  name: availabilities
- name: custom-inputs
- name: event-references
- name: booking-references
- name: destination-calendars
- name: selected-calendars
paths:
  /attendees:
    get:
      operationId: listAttendees
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No attendees were found
      summary: Find all attendees
      tags:
      - attendees
    post:
      operationId: addAttendee
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addAttendee_request'
        description: Create a new attendee related to one of your bookings
        required: true
      responses:
        "201":
          description: "OK, attendee created"
        "400":
          description: Bad request. Attendee body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new attendee
      tags:
      - attendees
  /attendees/{id}:
    delete:
      operationId: removeAttendeeById
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: ID of the attendee to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "201":
          description: "OK, attendee removed successfully"
        "400":
          description: Bad request. Attendee id is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Remove an existing attendee
      tags:
      - attendees
    get:
      operationId: getAttendeeById
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: ID of the attendee to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Attendee was not found
      summary: Find an attendee
      tags:
      - attendees
    patch:
      operationId: editAttendeeById
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: ID of the attendee to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editAttendeeById_request'
        description: Edit an existing attendee related to one of your bookings
        required: true
      responses:
        "201":
          description: "OK, attendee edited successfully"
        "400":
          description: Bad request. Attendee body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Edit an existing attendee
      tags:
      - attendees
  /availabilities:
    post:
      externalDocs:
        url: https://docs.cal.com/availability
      operationId: addAvailability
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              availability:
                summary: An example of availability
                value:
                  scheduleId: 123
                  days:
                  - 1
                  - 2
                  - 3
                  - 5
                  startTime: 1970-01-01T17:00:00.000Z
                  endTime: 1970-01-01T17:00:00.000Z
            schema:
              $ref: '#/components/schemas/addAvailability_request'
        description: Edit an existing availability related to one of your bookings
        required: true
      responses:
        "201":
          description: "OK, availability created"
        "400":
          description: Bad request. Availability body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new availability
      tags:
      - availabilities
  /availabilities/{id}:
    delete:
      externalDocs:
        url: https://docs.cal.com/availability
      operationId: removeAvailabilityById
      parameters:
      - description: ID of the availability to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: integer
        style: form
      responses:
        "201":
          description: "OK, availability removed successfully"
        "400":
          description: Bad request. Availability id is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Remove an existing availability
      tags:
      - availabilities
    get:
      externalDocs:
        url: https://docs.cal.com/availability
      operationId: getAvailabilityById
      parameters:
      - description: ID of the availability to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid
        "404":
          description: Availability not found
      summary: Find an availability
      tags:
      - availabilities
    patch:
      externalDocs:
        url: https://docs.cal.com/availability
      operationId: editAvailabilityById
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: integer
        style: form
      - description: ID of the availability to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              availability:
                summary: An example of availability
                value:
                  scheduleId: 123
                  days:
                  - 1
                  - 2
                  - 3
                  - 5
                  startTime: 1970-01-01T17:00:00.000Z
                  endTime: 1970-01-01T17:00:00.000Z
            schema:
              $ref: '#/components/schemas/editAvailabilityById_request'
        description: Edit an existing availability related to one of your bookings
        required: true
      responses:
        "201":
          description: "OK, availability edited successfully"
        "400":
          description: Bad request. Availability body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Edit an existing availability
      tags:
      - availabilities
  /teams/{teamId}/availability:
    get:
      operationId: team-availability
      parameters:
      - description: Your API key
        example: 1234abcd5678efgh
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: ID of the team to fetch the availability for
        example: 123
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: integer
        style: simple
      - description: Start Date of the availability query
        example: 2023-05-14 00:00:00
        explode: true
        in: query
        name: dateFrom
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: End Date of the availability query
        example: 2023-05-20 00:00:00
        explode: true
        in: query
        name: dateTo
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Event Type ID of the event type to fetch the availability for
        example: 123
        explode: true
        in: query
        name: eventTypeId
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                  busy:
                  - start: 2023-05-14T10:00:00.000Z
                    end: 2023-05-14T11:00:00.000Z
                    title: Team meeting between Alice and Bob
                  - start: 2023-05-15T14:00:00.000Z
                    end: 2023-05-15T15:00:00.000Z
                    title: Project review between Carol and Dave
                  - start: 2023-05-16T09:00:00.000Z
                    end: 2023-05-16T10:00:00.000Z
                  - start: 2023-05-17T13:00:00.000Z
                    end: 2023-05-17T14:00:00.000Z
                  timeZone: America/New_York
                  workingHours:
                  - days:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    startTime: 540
                    endTime: 1020
                    userId: 101
                  dateOverrides:
                  - date: 2023-05-15
                    startTime: 600
                    endTime: 960
                    userId: 101
                  currentSeats: 4
                type: object
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Team not found | Team has no members
      summary: Find team availability
      tags:
      - availability
  /availability:
    get:
      operationId: user-availability
      parameters:
      - description: Your API key
        example: 1234abcd5678efgh
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: ID of the user to fetch the availability for
        example: 101
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: integer
        style: form
      - description: username of the user to fetch the availability for
        example: alice
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: Start Date of the availability query
        example: 2023-05-14 00:00:00
        explode: true
        in: query
        name: dateFrom
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: End Date of the availability query
        example: 2023-05-20 00:00:00
        explode: true
        in: query
        name: dateTo
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Event Type ID of the event type to fetch the availability for
        example: 123
        explode: true
        in: query
        name: eventTypeId
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                  busy:
                  - start: 2023-05-14T10:00:00.000Z
                    end: 2023-05-14T11:00:00.000Z
                    title: Team meeting between Alice and Bob
                  - start: 2023-05-15T14:00:00.000Z
                    end: 2023-05-15T15:00:00.000Z
                    title: Project review between Carol and Dave
                  - start: 2023-05-16T09:00:00.000Z
                    end: 2023-05-16T10:00:00.000Z
                  - start: 2023-05-17T13:00:00.000Z
                    end: 2023-05-17T14:00:00.000Z
                  timeZone: America/New_York
                  workingHours:
                  - days:
                    - 1
                    - 2
                    - 3
                    - 4
                    - 5
                    startTime: 540
                    endTime: 1020
                    userId: 101
                  dateOverrides:
                  - date: 2023-05-15
                    startTime: 600
                    endTime: 960
                    userId: 101
                  currentSeats: 4
                type: object
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: User not found
      summary: Find user availability
      tags:
      - availability
  /booking-references:
    get:
      operationId: listBookingReferences
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No booking references were found
      summary: Find all booking references
      tags:
      - booking-references
    post:
      operationId: addBookingReference
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addBookingReference_request'
        description: Create a new booking reference related to one of your bookings
        required: true
      responses:
        "201":
          description: "OK,  booking reference created"
        "400":
          description: Bad request. BookingReference body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new  booking reference
      tags:
      - booking-references
  /booking-references/{id}:
    delete:
      operationId: removeBookingReferenceById
      parameters:
      - description: ID of the booking reference to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          description: "OK, bookingReference removed successfully"
        "400":
          description: Bad request. BookingReference id is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Remove an existing booking reference
      tags:
      - booking-references
    get:
      operationId: getBookingReferenceById
      parameters:
      - description: ID of the booking reference to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: BookingReference was not found
      summary: Find a booking reference
      tags:
      - booking-references
    patch:
      operationId: editBookingReferenceById
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: ID of the booking reference to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editBookingReferenceById_request'
        description: Edit an existing booking reference related to one of your bookings
        required: true
      responses:
        "201":
          description: "OK, BookingReference edited successfully"
        "400":
          description: Bad request. BookingReference body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Edit an existing booking reference
      tags:
      - booking-references
  /bookings:
    get:
      operationId: listBookings
      parameters:
      - description: Your API key
        example: 123456789abcdefgh
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          $ref: '#/components/schemas/listBookings_userId_parameter'
        style: form
      - explode: true
        in: query
        name: attendeeEmail
        required: false
        schema:
          $ref: '#/components/schemas/listBookings_attendeeEmail_parameter'
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                bookings:
                  value:
                  - booking:
                      id: 91
                      userId: 5
                      description: ""
                      eventTypeId: 7
                      uid: bFJeNb2uX8ANpT3JL5EfXw
                      title: 60min between Pro Example and John Doe
                      startTime: 2023-05-25T09:30:00.000Z
                      endTime: 2023-05-25T10:30:00.000Z
                      attendees:
                      - email: john.doe@example.com
                        name: John Doe
                        timeZone: Asia/Kolkata
                        locale: en
                      user:
                        email: pro@example.com
                        name: Pro Example
                        timeZone: Asia/Kolkata
                        locale: en
                      payment:
                      - id: 1
                        success: true
                        paymentOption: ON_BOOKING
                      metadata: {}
                      status: ACCEPTED
                      responses:
                        email: john.doe@example.com
                        name: John Doe
                        location:
                          optionValue: ""
                          value: inPerson
              schema:
                $ref: '#/components/schemas/ArrayOfBookings'
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No bookings were found
      summary: Find all bookings
      tags:
      - bookings
    post:
      operationId: addBooking
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              New Booking example:
                value:
                  eventTypeId: 2323232
                  start: 2023-05-24T13:00:00.000Z
                  end: 2023-05-24T13:30:00.000Z
                  responses:
                    name: Hello Hello
                    email: hello@gmail.com
                    metadata: {}
                    location: Calcom HQ
                  timeZone: Europe/London
                  language: en
                  title: Debugging between Syed Ali Shahbaz and Hello Hello
                  description: null
                  status: PENDING
                  smsReminderNumber: null
            schema:
              $ref: '#/components/schemas/addBooking_request'
        description: Create a new booking related to one of your event-types
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                booking created successfully example:
                  value:
                    booking:
                      id: 91
                      userId: 5
                      description: ""
                      eventTypeId: 7
                      uid: bFJeNb2uX8ANpT3JL5EfXw
                      title: 60min between Pro Example and John Doe
                      startTime: 2023-05-25T09:30:00.000Z
                      endTime: 2023-05-25T10:30:00.000Z
                      attendees:
                      - email: john.doe@example.com
                        name: John Doe
                        timeZone: Asia/Kolkata
                        locale: en
                      user:
                        email: pro@example.com
                        name: Pro Example
                        timeZone: Asia/Kolkata
                        locale: en
                      payment:
                      - id: 1
                        success: true
                        paymentOption: ON_BOOKING
                      metadata: {}
                      status: ACCEPTED
                      responses:
                        email: john.doe@example.com
                        name: John Doe
                        location:
                          optionValue: ""
                          value: inPerson
          description: Booking(s) created successfully.
        "400":
          description: |
            Bad request
            <table>
              <tr>
                <td>Message</td>
                <td>Cause</td>
              </tr>
              <tr>
                <td>Booking body is invalid</td>
                <td>Missing property on booking entity.</td>
              </tr>
              <tr>
                <td>Invalid eventTypeId</td>
                <td>The provided eventTypeId does not exist.</td>
              </tr>
              <tr>
                <td>Missing recurringCount</td>
                <td>The eventType is recurring, and no recurringCount was passed.</td>
              </tr>
              <tr>
                <td>Invalid recurringCount</td>
                <td>The provided recurringCount is greater than the eventType recurring config</td>
              </tr>
            </table>
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new booking
      tags:
      - bookings
  /bookings/{id}/cancel:
    delete:
      operationId: cancelBookingById
      parameters:
      - description: ID of the booking to cancel
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: Delete all remaining bookings
        explode: true
        in: query
        name: allRemainingBookings
        required: false
        schema:
          type: boolean
        style: form
      - description: The reason for cancellation of the booking
        explode: true
        in: query
        name: reason
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: "OK, booking cancelled successfully"
        "400":
          description: |
            Bad request
             <table>
               <tr>
                 <td>Message</td>
                 <td>Cause</td>
               </tr>
               <tr>
                 <td>Booking not found</td>
                 <td>The provided id didn't correspond to any existing booking.</td>
               </tr>
               <tr>
                 <td>User not found</td>
                 <td>The userId did not matched an existing user.</td>
               </tr>
             </table>
        "404":
          description: User not found
      summary: Booking cancellation
      tags:
      - bookings
  /bookings/{id}:
    get:
      operationId: getBookingById
      parameters:
      - description: ID of the booking to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                booking:
                  value:
                    booking:
                      id: 91
                      userId: 5
                      description: ""
                      eventTypeId: 7
                      uid: bFJeNb2uX8ANpT3JL5EfXw
                      title: 60min between Pro Example and John Doe
                      startTime: 2023-05-25T09:30:00.000Z
                      endTime: 2023-05-25T10:30:00.000Z
                      attendees:
                      - email: john.doe@example.com
                        name: John Doe
                        timeZone: Asia/Kolkata
                        locale: en
                      user:
                        email: pro@example.com
                        name: Pro Example
                        timeZone: Asia/Kolkata
                        locale: en
                      payment:
                      - id: 1
                        success: true
                        paymentOption: ON_BOOKING
                      metadata: {}
                      status: ACCEPTED
                      responses:
                        email: john.doe@example.com
                        name: John Doe
                        location:
                          optionValue: ""
                          value: inPerson
              schema:
                $ref: '#/components/schemas/Booking'
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Booking was not found
      summary: Find a booking
      tags:
      - bookings
    patch:
      operationId: editBookingById
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: ID of the booking to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              editBooking:
                value:
                  title: Debugging between Syed Ali Shahbaz and Hello Hello
                  start: 2023-05-24T13:00:00.000Z
                  end: 2023-05-24T13:30:00.000Z
                  status: CANCELLED
            schema:
              $ref: '#/components/schemas/editBookingById_request'
        description: Edit an existing booking related to one of your event-types
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                bookings:
                  value:
                    booking:
                      id: 11223344
                      userId: 182
                      description: null
                      eventTypeId: 2323232
                      uid: stoSJtnh83PEL4rZmqdHe2
                      title: Debugging between Syed Ali Shahbaz and Hello Hello
                      startTime: 2023-05-24T13:00:00.000Z
                      endTime: 2023-05-24T13:30:00.000Z
                      metadata: {}
                      status: CANCELLED
                      responses:
                        email: john.doe@example.com
                        name: John Doe
                        location:
                          optionValue: ""
                          value: inPerson
          description: "OK, booking edited successfully"
        "400":
          description: Bad request. Booking body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Edit an existing booking
      tags:
      - bookings
  /custom-inputs:
    get:
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No eventTypeCustomInputs were found
      summary: Find all eventTypeCustomInputs
      tags:
      - custom-inputs
    post:
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              custom-inputs:
                summary: An example of custom-inputs
                value:
                  eventTypeID: 1
                  label: Phone Number
                  type: PHONE
                  required: true
                  placeholder: 100 101 1234
            schema:
              $ref: '#/components/schemas/_custom_inputs_post_request'
        description: Create a new custom input for an event type
        required: true
      responses:
        "201":
          description: "OK, eventTypeCustomInput created"
        "400":
          description: Bad request. EventTypeCustomInput body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new eventTypeCustomInput
      tags:
      - custom-inputs
  /custom-inputs/{id}:
    delete:
      parameters:
      - description: ID of the eventTypeCustomInput to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          description: "OK, eventTypeCustomInput removed successfully"
        "400":
          description: Bad request. EventType id is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Remove an existing eventTypeCustomInput
      tags:
      - custom-inputs
    get:
      parameters:
      - description: ID of the eventTypeCustomInput to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: EventType was not found
      summary: Find a eventTypeCustomInput
      tags:
      - custom-inputs
    patch:
      parameters:
      - description: ID of the eventTypeCustomInput to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              custom-inputs:
                summary: Example of patching an existing Custom Input
                value:
                  required: true
            schema:
              $ref: '#/components/schemas/_custom_inputs__id__patch_request'
        description: Edit an existing eventTypeCustomInput for an event type
        required: true
      responses:
        "201":
          description: "OK, eventTypeCustomInput edited successfully"
        "400":
          description: Bad request. EventType body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Edit an existing eventTypeCustomInput
      tags:
      - custom-inputs
  /destination-calendars:
    get:
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No destination calendars were found
      summary: Find all destination calendars
      tags:
      - destination-calendars
    post:
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_destination_calendars_post_request'
        description: Create a new destination calendar for your events
        required: true
      responses:
        "201":
          description: "OK, destination calendar created"
        "400":
          description: Bad request. DestinationCalendar body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new destination calendar
      tags:
      - destination-calendars
  /destination-calendars/{id}:
    delete:
      parameters:
      - description: ID of the destination calendar to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: "OK, destinationCalendar removed successfully"
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Destination calendar not found
      summary: Remove an existing destination calendar
      tags:
      - destination-calendars
    get:
      parameters:
      - description: ID of the destination calendar to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Destination calendar not found
      summary: Find a destination calendar
      tags:
      - destination-calendars
    patch:
      parameters:
      - description: ID of the destination calendar to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_destination_calendars__id__patch_request'
        description: Create a new booking related to one of your event-types
        required: true
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Destination calendar not found
      summary: Edit an existing destination calendar
      tags:
      - destination-calendars
  /event-types:
    get:
      externalDocs:
        url: https://docs.cal.com/core-features/event-types
      operationId: listEventTypes
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No event types were found
      summary: Find all event types
      tags:
      - event-types
    post:
      externalDocs:
        url: https://docs.cal.com/core-features/event-types
      operationId: addEventType
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              event-type:
                summary: An example of an individual event type POST request
                value:
                  title: Hello World
                  slug: hello-world
                  length: 30
                  hidden: false
                  position: 0
                  eventName: null
                  timeZone: null
                  scheduleId: 5
                  periodType: UNLIMITED
                  periodStartDate: 2023-02-15T08:46:16.000Z
                  periodEndDate: 2023-0-15T08:46:16.000Z
                  periodDays: null
                  periodCountCalendarDays: false
                  requiresConfirmation: false
                  recurringEvent: null
                  disableGuests: false
                  hideCalendarNotes: false
                  minimumBookingNotice: 120
                  beforeEventBuffer: 0
                  afterEventBuffer: 0
                  price: 0
                  currency: usd
                  slotInterval: null
                  successRedirectUrl: null
                  description: A test event type
                  metadata:
                    apps:
                      stripe:
                        price: 0
                        enabled: false
                        currency: usd
              team-event-type:
                summary: An example of a team event type POST request
                value:
                  title: Tennis class
                  slug: "tennis-class-{{$guid}}"
                  length: 60
                  hidden: false
                  position: 0
                  teamId: 3
                  eventName: null
                  timeZone: null
                  periodType: UNLIMITED
                  periodStartDate: null
                  periodEndDate: null
                  periodDays: null
                  periodCountCalendarDays: null
                  requiresConfirmation: true
                  recurringEvent:
                    interval: 2
                    count: 10
                    freq: 2
                  disableGuests: false
                  hideCalendarNotes: false
                  minimumBookingNotice: 120
                  beforeEventBuffer: 0
                  afterEventBuffer: 0
                  schedulingType: COLLECTIVE
                  price: 0
                  currency: usd
                  slotInterval: null
                  successRedirectUrl: null
                  description: null
                  locations:
                  - address: London
                    type: inPerson
                  metadata: {}
            schema:
              $ref: '#/components/schemas/addEventType_request'
        description: Create a new event-type related to your user or team
        required: true
      responses:
        "201":
          description: "OK, event type created"
        "400":
          description: Bad request. EventType body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new event type
      tags:
      - event-types
  /event-types/{id}:
    delete:
      externalDocs:
        url: https://docs.cal.com/core-features/event-types
      operationId: removeEventTypeById
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: ID of the eventType to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "201":
          description: "OK, eventType removed successfully"
        "400":
          description: Bad request. EventType id is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Remove an existing eventType
      tags:
      - event-types
    get:
      externalDocs:
        url: https://docs.cal.com/core-features/event-types
      operationId: getEventTypeById
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: ID of the eventType to get
        example: 4
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: EventType was not found
      summary: Find a eventType
      tags:
      - event-types
    patch:
      externalDocs:
        url: https://docs.cal.com/core-features/event-types
      operationId: editEventTypeById
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: ID of the eventType to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              event-type:
                summary: An example of event type PATCH request
                value:
                  length: 60
                  requiresConfirmation: true
            schema:
              $ref: '#/components/schemas/editEventTypeById_request'
        description: Create a new event-type related to your user or team
        required: true
      responses:
        "201":
          description: "OK, eventType edited successfully"
        "400":
          description: Bad request. EventType body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Edit an existing eventType
      tags:
      - event-types
  /memberships:
    get:
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No memberships were found
      summary: Find all memberships
      tags:
      - memberships
    post:
      responses:
        "201":
          description: "OK, membership created"
        "400":
          description: Bad request. Membership body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new membership
      tags:
      - memberships
  /memberships/{userId}_{teamId}:
    delete:
      parameters:
      - description: Numeric userId of the membership to get
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric teamId of the membership to get
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "201":
          description: "OK, membership removed successfuly"
        "400":
          description: Bad request. Membership id is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Remove an existing membership
      tags:
      - memberships
    get:
      parameters:
      - description: Numeric userId of the membership to get
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric teamId of the membership to get
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Membership was not found
      summary: Find a membership by userID and teamID
      tags:
      - memberships
    patch:
      parameters:
      - description: Numeric userId of the membership to get
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - description: Numeric teamId of the membership to get
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "201":
          description: "OK, membership edited successfully"
        "400":
          description: Bad request. Membership body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Edit an existing membership
      tags:
      - memberships
  /payments/{id}:
    get:
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: ID of the payment to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Payment was not found
      summary: Find a payment
      tags:
      - payments
  /payments:
    get:
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No payments were found
      summary: Find all payments
      tags:
      - payments
  /schedules:
    get:
      operationId: listSchedules
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                schedules:
                  value:
                    schedules:
                    - id: 1234
                      userId: 5678
                      name: Sample Schedule 1
                      timeZone: America/Chicago
                      availability:
                      - id: 987
                        eventTypeId: null
                        days:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        startTime: 09:00:00
                        endTime: 23:00:00
                    - id: 2345
                      userId: 6789
                      name: Sample Schedule 2
                      timeZone: Europe/Amsterdam
                      availability:
                      - id: 876
                        eventTypeId: null
                        days:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        startTime: 09:00:00
                        endTime: 17:00:00
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No schedules were found
      summary: Find all schedules
      tags:
      - schedules
    post:
      operationId: addSchedule
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              schedule:
                value:
                  name: Sample Schedule
                  timeZone: Asia/Calcutta
            schema:
              $ref: '#/components/schemas/addSchedule_request'
        description: Create a new schedule
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                schedule:
                  value:
                    schedule:
                      id: 79471
                      userId: 182
                      name: Total Testing
                      timeZone: Asia/Calcutta
                      availability:
                      - id: 337917
                        eventTypeId: null
                        days:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        startTime: 09:00:00
                        endTime: 17:00:00
                    message: Schedule created successfully
          description: "OK, schedule created"
        "400":
          description: Bad request. Schedule body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new schedule
      tags:
      - schedules
  /schedules/{id}:
    delete:
      operationId: removeScheduleById
      parameters:
      - description: ID of the schedule to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          description: "OK, schedule removed successfully"
        "400":
          description: Bad request. Schedule id is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Remove an existing schedule
      tags:
      - schedules
    get:
      operationId: getScheduleById
      parameters:
      - description: ID of the schedule to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                schedule:
                  value:
                    schedule:
                      id: 12345
                      userId: 182
                      name: Sample Schedule
                      timeZone: Asia/Calcutta
                      availability:
                      - id: 111
                        eventTypeId: null
                        days:
                        - 0
                        - 1
                        - 2
                        - 3
                        - 4
                        - 6
                        startTime: 00:00:00
                        endTime: 23:45:00
                      - id: 112
                        eventTypeId: null
                        days:
                        - 5
                        startTime: 00:00:00
                        endTime: 12:00:00
                      - id: 113
                        eventTypeId: null
                        days:
                        - 5
                        startTime: 15:00:00
                        endTime: 23:45:00
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Schedule was not found
      summary: Find a schedule
      tags:
      - schedules
    patch:
      operationId: editScheduleById
      parameters:
      - description: ID of the schedule to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              schedule:
                value:
                  name: Updated Schedule
                  timeZone: Asia/Calcutta
            schema:
              $ref: '#/components/schemas/editScheduleById_request'
        description: Edit an existing schedule
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                schedule:
                  value:
                    schedule:
                      id: 12345
                      userId: 1
                      name: Total Testing Part 2
                      timeZone: Asia/Calcutta
                      availability:
                      - id: 4567
                        eventTypeId: null
                        days:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        startTime: 09:00:00
                        endTime: 17:00:00
          description: "OK, schedule edited successfully"
        "400":
          description: Bad request. Schedule body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Edit an existing schedule
      tags:
      - schedules
  /selected-calendars:
    get:
      operationId: listSelectedCalendars
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No selected calendars were found
      summary: Find all selected calendars
      tags:
      - selected-calendars
    post:
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_selected_calendars_post_request'
        description: Create a new selected calendar
        required: true
      responses:
        "201":
          description: "OK, selected calendar created"
        "400":
          description: Bad request. SelectedCalendar body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new selected calendar
      tags:
      - selected-calendars
  /selected-calendars/{userId}_{integration}_{externalId}:
    delete:
      operationId: removeSelectedCalendarById
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: userId of the selected calendar to get
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - description: externalId of the selected-calendar to get
        explode: false
        in: path
        name: externalId
        required: true
        schema:
          type: integer
        style: simple
      - description: integration of the selected calendar to get
        explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: "OK, selected-calendar removed successfully"
        "400":
          description: Bad request. SelectedCalendar id is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Remove a selected calendar
      tags:
      - selected-calendars
    get:
      operationId: getSelectedCalendarById
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: userId of the selected calendar to get
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - description: externalId of the selected calendar to get
        explode: false
        in: path
        name: externalId
        required: true
        schema:
          type: string
        style: simple
      - description: integration of the selected calendar to get
        explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: SelectedCalendar was not found
      summary: Find a selected calendar by providing the compoundId(userId_integration_externalId)
        separated by `_`
      tags:
      - selected-calendars
    patch:
      operationId: editSelectedCalendarById
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: userId of the selected calendar to get
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - description: externalId of the selected calendar to get
        explode: false
        in: path
        name: externalId
        required: true
        schema:
          type: string
        style: simple
      - description: integration of the selected calendar to get
        explode: false
        in: path
        name: integration
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: "OK, selected-calendar edited successfully"
        "400":
          description: Bad request. SelectedCalendar body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Edit a selected calendar
      tags:
      - selected-calendars
  /teams:
    get:
      operationId: listTeams
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No teams were found
      summary: Find all teams
      tags:
      - teams
    post:
      operationId: addTeam
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addTeam_request'
        description: Create a new custom input for an event type
        required: true
      responses:
        "201":
          description: "OK, team created"
        "400":
          description: Bad request. Team body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new team
      tags:
      - teams
  /teams/{teamId}:
    delete:
      operationId: removeTeamById
      parameters:
      - description: ID of the team to delete
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          description: "OK, team removed successfully"
        "400":
          description: Bad request. Team id is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Remove an existing team
      tags:
      - teams
    get:
      operationId: getTeamById
      parameters:
      - description: ID of the team to get
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Team was not found
      summary: Find a team
      tags:
      - teams
    patch:
      operationId: editTeamById
      parameters:
      - description: ID of the team to edit
        explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editTeamById_request'
        description: Create a new custom input for an event type
        required: true
      responses:
        "201":
          description: "OK, team edited successfully"
        "400":
          description: Bad request. Team body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Edit an existing team
      tags:
      - teams
  /teams/{teamId}/event-types:
    get:
      externalDocs:
        url: https://docs.cal.com/core-features/event-types
      operationId: listEventTypesByTeamId
      parameters:
      - description: Your API Key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: teamId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No event types were found
      summary: Find all event types that belong to teamId
      tags:
      - event-types
  /users:
    get:
      operationId: listUsers
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      - description: The email address or an array of email addresses to filter by
        explode: true
        in: query
        name: email
        required: false
        schema:
          items:
            format: email
            type: string
          type: array
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No users were found
      summary: Find all users.
      tags:
      - users
    post:
      operationId: addUser
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              user:
                summary: An example of USER
                value:
                  email: email@example.com
                  username: johndoe
                  weekStart: MONDAY
                  brandColor: '#555555'
                  darkBrandColor: '#111111'
                  timeZone: EUROPE/PARIS
                  theme: LIGHT
                  timeFormat: TWELVE
                  locale: FR
            schema:
              $ref: '#/components/schemas/addUser_request'
        description: Create a new user
        required: true
      responses:
        "201":
          description: "OK, user created"
        "400":
          description: Bad request. user body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new user
      tags:
      - users
  /users/{userId}:
    delete:
      operationId: removeUserById
      parameters:
      - description: ID of the user to delete
        example: 1
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          description: "OK, user removed successfuly"
        "400":
          description: Bad request. User id is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Remove an existing user
      tags:
      - users
    get:
      operationId: getUserById
      parameters:
      - description: ID of the user to get
        example: 4
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: User was not found
      summary: "Find a user, returns your user if regular user."
      tags:
      - users
    patch:
      operationId: editUserById
      parameters:
      - description: ID of the user to edit
        example: 4
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            examples:
              user:
                summary: An example of USER
                value:
                  email: email@example.com
                  username: johndoe
                  weekStart: MONDAY
                  brandColor: null
                  darkBrandColor: null
                  timeZone: EUROPE/PARIS
                  theme: LIGHT
                  timeFormat: TWELVE
                  locale: FR
            schema:
              $ref: '#/components/schemas/editUserById_request'
        description: Edit an existing attendee related to one of your bookings
        required: true
      responses:
        "200":
          description: "OK, user edited successfully"
        "400":
          description: Bad request. User body is invalid.
        "401":
          description: Authorization information is missing or invalid.
        "403":
          description: Insufficient permissions to access resource.
      summary: Edit an existing user
      tags:
      - users
  /webhooks:
    get:
      externalDocs:
        url: https://docs.cal.com/core-features/webhooks
      operationId: listWebhooks
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: No webhooks were found
      summary: Find all webhooks
      tags:
      - webhooks
    post:
      externalDocs:
        url: https://docs.cal.com/core-features/webhooks
      operationId: addWebhook
      parameters:
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addWebhook_request'
        description: Create a new webhook
        required: true
      responses:
        "201":
          description: "OK, webhook created"
        "400":
          description: Bad request. webhook body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Creates a new webhook
      tags:
      - webhooks
  /webhooks/{id}:
    delete:
      externalDocs:
        url: https://docs.cal.com/core-features/webhooks
      operationId: removeWebhookById
      parameters:
      - description: Numeric ID of the hooks to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "201":
          description: "OK, hook removed successfully"
        "400":
          description: Bad request. hook id is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Remove an existing hook
      tags:
      - webhooks
    get:
      externalDocs:
        url: https://docs.cal.com/core-features/webhooks
      operationId: getWebhookById
      parameters:
      - description: Numeric ID of the webhook to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "401":
          description: Authorization information is missing or invalid.
        "404":
          description: Webhook was not found
      summary: Find a webhook
      tags:
      - webhooks
    patch:
      externalDocs:
        url: https://docs.cal.com/core-features/webhooks
      operationId: editWebhookById
      parameters:
      - description: Numeric ID of the webhook to edit
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Your API key
        explode: true
        in: query
        name: apiKey
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editWebhookById_request'
        description: Edit an existing webhook
        required: true
      responses:
        "201":
          description: "OK, webhook edited successfully"
        "400":
          description: Bad request. Webhook body is invalid.
        "401":
          description: Authorization information is missing or invalid.
      summary: Edit an existing webhook
      tags:
      - webhooks
components:
  schemas:
    ArrayOfBookings:
      items:
        $ref: '#/components/schemas/Booking'
      type: array
    Booking:
      example:
        uid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        eventTypeId: 6.027456183070403
        attendees:
        - name: name
          timeZone: Europe/London
          locale: en
          email: example@cal.com
        - name: name
          timeZone: Europe/London
          locale: en
          email: example@cal.com
        description: description
        timeZone: Europe/London
        startTime: 2000-01-23T04:56:07.000+00:00
        payment:
        - success: true
          paymentOption: ON_BOOKING
          id: 1
        - success: true
          paymentOption: ON_BOOKING
          id: 1
        id: 0.8008281904610115
        endTime: 2000-01-23T04:56:07.000+00:00
        title: title
        user:
          name: name
          timeZone: Europe/London
          locale: en
          email: example@cal.com
      properties:
        id:
          type: number
        description:
          type: string
        eventTypeId:
          type: number
        uid:
          format: uuid
          type: string
        title:
          type: string
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        timeZone:
          example: Europe/London
          type: string
        attendees:
          items:
            $ref: '#/components/schemas/Booking_attendees_inner'
          type: array
        user:
          $ref: '#/components/schemas/Booking_attendees_inner'
        payment:
          items:
            $ref: '#/components/schemas/Booking_payment_inner'
          type: array
    addAttendee_request:
      properties:
        bookingId:
          type: number
        email:
          format: email
          type: string
        name:
          type: string
        timeZone:
          type: string
      required:
      - bookingId
      - email
      - name
      - timeZone
      type: object
    editAttendeeById_request:
      properties:
        email:
          format: email
          type: string
        name:
          type: string
        timeZone:
          type: string
      type: object
    addAvailability_request:
      properties:
        days:
          description: Array of integers depicting weekdays
          items:
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            type: integer
          type: array
        scheduleId:
          description: ID of schedule this availability is associated with
          type: integer
        startTime:
          description: Start time of the availability
          type: string
        endTime:
          description: End time of the availability
          type: string
      required:
      - endTime
      - scheduleId
      - startTime
      type: object
    editAvailabilityById_request:
      properties:
        days:
          description: Array of integers depicting weekdays
          items:
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            type: integer
          type: array
        scheduleId:
          description: ID of schedule this availability is associated with
          type: integer
        startTime:
          description: Start time of the availability
          type: string
        endTime:
          description: End time of the availability
          type: string
      type: object
    addBookingReference_request:
      properties:
        type:
          type: string
        uid:
          type: string
        meetingId:
          type: string
        meetingPassword:
          type: string
        meetingUrl:
          type: string
        bookingId:
          type: boolean
        externalCalendarId:
          type: string
        deleted:
          type: boolean
        credentialId:
          type: integer
      required:
      - type
      - uid
      type: object
    editBookingReferenceById_request:
      properties:
        type:
          type: string
        meetingId:
          type: string
        meetingPassword:
          type: string
        externalCalendarId:
          type: string
        deleted:
          type: boolean
        credentialId:
          type: integer
      type: object
    listBookings_userId_parameter:
      oneOf:
      - example: 1
        type: integer
      - example:
        - 2
        - 3
        - 4
        items:
          type: integer
        type: array
    listBookings_attendeeEmail_parameter:
      oneOf:
      - example: john.doe@example.com
        format: email
        type: string
      - example:
        - john.doe@example.com
        - jane.doe@example.com
        items:
          format: email
          type: string
        type: array
    addBooking_request_responses_location:
      description: Meeting location
      properties:
        optionValue:
          description: Option value for the location
          type: string
        value:
          description: "The meeting URL, Phone number or Address"
          type: string
      type: object
    addBooking_request_responses:
      properties:
        name:
          description: Attendee full name
          type: string
        email:
          description: Attendee email address
          format: email
          type: string
        location:
          $ref: '#/components/schemas/addBooking_request_responses_location'
      required:
      - email
      - location
      - name
      type: object
    addBooking_request:
      properties:
        eventTypeId:
          description: ID of the event type to book
          type: integer
        start:
          description: Start time of the Event
          format: date-time
          type: string
        end:
          description: End time of the Event
          format: date-time
          type: string
        responses:
          $ref: '#/components/schemas/addBooking_request_responses'
        metadata:
          description: Any metadata associated with the booking
          properties: {}
          type: object
        timeZone:
          description: TimeZone of the Attendee
          type: string
        language:
          description: Language of the Attendee
          type: string
        title:
          description: Booking event title
          type: string
        recurringEventId:
          description: Recurring event ID if the event is recurring
          type: integer
        description:
          description: Event description
          type: string
        status:
          description: "Acceptable values one of [\"ACCEPTED\", \"PENDING\", \"CANCELLED\"\
            , \"REJECTED\"]"
          type: string
        seatsPerTimeSlot:
          description: The number of seats for each time slot
          type: integer
        seatsShowAttendees:
          description: Share Attendee information in seats
          type: boolean
        seatsShowAvailabilityCount:
          description: Show the number of available seats
          type: boolean
        smsReminderNumber:
          description: SMS reminder number
          type: number
      required:
      - eventTypeId
      - language
      - metadata
      - responses
      - start
      - timeZone
      type: object
    editBookingById_request:
      properties:
        title:
          description: Booking event title
          type: string
        start:
          description: Start time of the Event
          format: date-time
          type: string
        end:
          description: End time of the Event
          format: date-time
          type: string
        status:
          description: "Acceptable values one of [\"ACCEPTED\", \"PENDING\", \"CANCELLED\"\
            , \"REJECTED\"]"
          type: string
        description:
          description: Description of the meeting
          type: string
      type: object
    _custom_inputs_post_request_options:
      description: Options for the custom input
      properties:
        label:
          type: string
        type:
          type: string
      type: object
    _custom_inputs_post_request:
      properties:
        eventTypeId:
          description: ID of the event type to which the custom input is being added
          type: integer
        label:
          description: Label of the custom input
          type: string
        type:
          description: "Type of the custom input. The value is ENUM; one of [TEXT,\
            \ TEXTLONG, NUMBER, BOOL, RADIO, PHONE]"
          type: string
        options:
          $ref: '#/components/schemas/_custom_inputs_post_request_options'
        required:
          description: If the custom input is required before booking
          type: boolean
        placeholder:
          description: Placeholder text for the custom input
          type: string
      required:
      - eventTypeId
      - label
      - placeholder
      - required
      - type
      type: object
    _custom_inputs__id__patch_request:
      properties:
        eventTypeId:
          description: ID of the event type to which the custom input is being added
          type: integer
        label:
          description: Label of the custom input
          type: string
        type:
          description: "Type of the custom input. The value is ENUM; one of [TEXT,\
            \ TEXTLONG, NUMBER, BOOL, RADIO, PHONE]"
          type: string
        options:
          $ref: '#/components/schemas/_custom_inputs_post_request_options'
        required:
          description: If the custom input is required before booking
          type: boolean
        placeholder:
          description: Placeholder text for the custom input
          type: string
      type: object
    _destination_calendars_post_request:
      properties:
        integration:
          description: The integration
          type: string
        externalId:
          description: The external ID of the integration
          type: string
        eventTypeId:
          description: The ID of the eventType it is associated with
          type: integer
        bookingId:
          description: The booking ID it is associated with
          type: integer
        userId:
          description: The user it is associated with
          type: integer
      required:
      - credentialId
      - externalId
      - integration
      type: object
    _destination_calendars__id__patch_request:
      properties:
        integration:
          description: The integration
          type: string
        externalId:
          description: The external ID of the integration
          type: string
        eventTypeId:
          description: The ID of the eventType it is associated with
          type: integer
        bookingId:
          description: The booking ID it is associated with
          type: integer
      type: object
    addEventType_request_hosts_inner:
      properties:
        userId:
          type: number
        isFixed:
          description: Host MUST be available for any slot to be bookable.
          type: boolean
      type: object
    addEventType_request_recurringEvent:
      description: If the event should recur every week/month/year with the selected
        frequency
      properties:
        interval:
          type: integer
        count:
          type: integer
        freq:
          type: integer
      type: object
    addEventType_request_locations_inner_inner_oneOf:
      properties:
        type:
          enum:
          - integrations:daily
          type: string
      type: object
    addEventType_request_locations_inner_inner_oneOf_1:
      properties:
        type:
          enum:
          - attendeeInPerson
          type: string
      type: object
    addEventType_request_locations_inner_inner_oneOf_2:
      properties:
        type:
          enum:
          - inPerson
          type: string
        address:
          type: string
        displayLocationPublicly:
          type: boolean
      type: object
    addEventType_request_locations_inner_inner_oneOf_3:
      properties:
        type:
          enum:
          - link
          type: string
        link:
          type: string
        displayLocationPublicly:
          type: boolean
      type: object
    addEventType_request_locations_inner_inner:
      oneOf:
      - $ref: '#/components/schemas/addEventType_request_locations_inner_inner_oneOf'
      - $ref: '#/components/schemas/addEventType_request_locations_inner_inner_oneOf_1'
      - $ref: '#/components/schemas/addEventType_request_locations_inner_inner_oneOf_2'
      - $ref: '#/components/schemas/addEventType_request_locations_inner_inner_oneOf_3'
    addEventType_request:
      properties:
        length:
          description: Duration of the event type in minutes
          type: integer
        metadata:
          description: "Metadata relating to event type. Pass {} if empty"
          type: object
        title:
          description: Title of the event type
          type: string
        slug:
          description: Unique slug for the event type
          type: string
        hosts:
          items:
            $ref: '#/components/schemas/addEventType_request_hosts_inner'
          type: array
        hidden:
          description: If the event type should be hidden from your public booking
            page
          type: boolean
        scheduleId:
          description: The ID of the schedule for this event type
          type: number
        position:
          description: The position of the event type on the public booking page
          type: integer
        teamId:
          description: Team ID if the event type should belong to a team
          type: integer
        periodType:
          description: To decide how far into the future an invitee can book an event
            with you
          enum:
          - UNLIMITED
          - ROLLING
          - RANGE
          type: string
        periodStartDate:
          description: Start date of bookable period (Required if periodType is 'range')
          format: date-time
          type: string
        periodEndDate:
          description: End date of bookable period (Required if periodType is 'range')
          format: date-time
          type: string
        periodDays:
          description: Number of bookable days (Required if periodType is rolling)
          type: integer
        periodCountCalendarDays:
          description: If calendar days should be counted for period days
          type: boolean
        requiresConfirmation:
          description: If the event type should require your confirmation before completing
            the booking
          type: boolean
        recurringEvent:
          $ref: '#/components/schemas/addEventType_request_recurringEvent'
        disableGuests:
          description: If the event type should disable adding guests to the booking
          type: boolean
        hideCalendarNotes:
          description: If the calendar notes should be hidden from the booking
          type: boolean
        minimumBookingNotice:
          description: Minimum time in minutes before the event is bookable
          type: integer
        beforeEventBuffer:
          description: Number of minutes of buffer time before a Cal Event
          type: integer
        afterEventBuffer:
          description: Number of minutes of buffer time after a Cal Event
          type: integer
        schedulingType:
          description: The type of scheduling if a Team event. Required for team events
            only
          enum:
          - ROUND_ROBIN
          - COLLECTIVE
          - MANAGED
          type: string
        price:
          description: Price of the event type booking
          type: integer
        parentId:
          description: EventTypeId of the parent managed event
          type: integer
        currency:
          description: "Currency acronym. Eg- usd, eur, gbp, etc."
          type: string
        slotInterval:
          description: The intervals of available bookable slots in minutes
          type: integer
        successRedirectUrl:
          description: "A valid URL where the booker will redirect to, once the booking\
            \ is completed successfully"
          format: url
          type: string
        description:
          description: Description of the event type
          type: string
        locations:
          description: A list of all available locations for the event type
          items:
            items:
              $ref: '#/components/schemas/addEventType_request_locations_inner_inner'
            type: array
          type: array
      required:
      - length
      - metadata
      - slug
      - title
      type: object
    editEventTypeById_request:
      properties:
        length:
          description: Duration of the event type in minutes
          type: integer
        metadata:
          description: "Metadata relating to event type. Pass {} if empty"
          type: object
        title:
          description: Title of the event type
          type: string
        slug:
          description: Unique slug for the event type
          type: string
        scheduleId:
          description: The ID of the schedule for this event type
          type: number
        hosts:
          items:
            $ref: '#/components/schemas/addEventType_request_hosts_inner'
          type: array
        hidden:
          description: If the event type should be hidden from your public booking
            page
          type: boolean
        position:
          description: The position of the event type on the public booking page
          type: integer
        teamId:
          description: Team ID if the event type should belong to a team
          type: integer
        periodType:
          description: To decide how far into the future an invitee can book an event
            with you
          enum:
          - UNLIMITED
          - ROLLING
          - RANGE
          type: string
        periodStartDate:
          description: Start date of bookable period (Required if periodType is 'range')
          format: date-time
          type: string
        periodEndDate:
          description: End date of bookable period (Required if periodType is 'range')
          format: date-time
          type: string
        periodDays:
          description: Number of bookable days (Required if periodType is rolling)
          type: integer
        periodCountCalendarDays:
          description: If calendar days should be counted for period days
          type: boolean
        requiresConfirmation:
          description: If the event type should require your confirmation before completing
            the booking
          type: boolean
        recurringEvent:
          $ref: '#/components/schemas/addEventType_request_recurringEvent'
        disableGuests:
          description: If the event type should disable adding guests to the booking
          type: boolean
        hideCalendarNotes:
          description: If the calendar notes should be hidden from the booking
          type: boolean
        minimumBookingNotice:
          description: Minimum time in minutes before the event is bookable
          type: integer
        beforeEventBuffer:
          description: Number of minutes of buffer time before a Cal Event
          type: integer
        afterEventBuffer:
          description: Number of minutes of buffer time after a Cal Event
          type: integer
        schedulingType:
          description: The type of scheduling if a Team event. Required for team events
            only
          enum:
          - ROUND_ROBIN
          - COLLECTIVE
          type: string
        price:
          description: Price of the event type booking
          type: integer
        currency:
          description: "Currency acronym. Eg- usd, eur, gbp, etc."
          type: string
        slotInterval:
          description: The intervals of available bookable slots in minutes
          type: integer
        successRedirectUrl:
          description: "A valid URL where the booker will redirect to, once the booking\
            \ is completed successfully"
          format: url
          type: string
        description:
          description: Description of the event type
          type: string
        seatsPerTimeSlot:
          description: The number of seats for each time slot
          type: integer
        seatsShowAttendees:
          description: Share Attendee information in seats
          type: boolean
        seatsShowAvailabilityCount:
          description: Show the number of available seats
          type: boolean
        locations:
          description: A list of all available locations for the event type
          items:
            items:
              $ref: '#/components/schemas/addEventType_request_locations_inner_inner'
            type: array
          type: array
      type: object
    addSchedule_request:
      properties:
        name:
          description: Name of the schedule
          type: string
        timeZone:
          description: The timeZone for this schedule
          type: string
      required:
      - name
      - timeZone
      type: object
    editScheduleById_request:
      properties:
        name:
          description: Name of the schedule
          type: string
        timeZone:
          description: The timezone for this schedule
          type: string
      type: object
    _selected_calendars_post_request:
      properties:
        integration:
          description: The integration name
          type: string
        externalId:
          description: The external ID of the integration
          type: string
      required:
      - externalId
      - integration
      type: object
    addTeam_request:
      properties:
        name:
          description: Name of the team
          type: string
        slug:
          description: A unique slug that works as path for the team public page
          type: string
      required:
      - name
      - slug
      type: object
    editTeamById_request:
      properties:
        name:
          description: Name of the team
          type: string
        slug:
          description: A unique slug that works as path for the team public page
          type: string
      type: object
    addUser_request:
      properties:
        email:
          description: Email that belongs to the user being edited
          format: email
          type: string
        username:
          description: Username for the user being created
          type: string
        brandColor:
          description: The new user's brand color
          type: string
        darkBrandColor:
          description: The new user's brand color for dark mode
          type: string
        hideBranding:
          description: Remove branding from the user's calendar page
          type: boolean
        weekStart:
          description: "Start of the week. Acceptable values are one of [SUNDAY, MONDAY,\
            \ TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY]"
          type: string
        timeZone:
          description: The new user's time zone. Eg- 'EUROPE/PARIS'
          type: string
        theme:
          description: "Default theme for the new user. Acceptable values are one\
            \ of [DARK, LIGHT]"
          type: string
        timeFormat:
          description: "The new user's time format. Acceptable values are one of [TWELVE,\
            \ TWENTY_FOUR]"
          type: string
        locale:
          description: "The new user's locale. Acceptable values are one of [EN, FR,\
            \ IT, RU, ES, DE, PT, RO, NL, PT_BR, ES_419, KO, JA, PL, AR, IW, ZH_CH,\
            \ ZH_TW, CS, SR, SV, VI]"
          type: string
        avatar:
          description: "The user's avatar, in base64 format"
          type: string
      required:
      - email
      - username
      type: object
    editUserById_request:
      properties:
        email:
          description: Email that belongs to the user being edited
          format: email
          type: string
        username:
          description: Username for the user being edited
          type: string
        brandColor:
          description: The user's brand color
          type: string
        darkBrandColor:
          description: The user's brand color for dark mode
          type: string
        weekStart:
          description: "Start of the week. Acceptable values are one of [SUNDAY, MONDAY,\
            \ TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY]"
          type: string
        timeZone:
          description: The user's time zone
          type: string
        hideBranding:
          description: Remove branding from the user's calendar page
          type: boolean
        theme:
          description: "Default theme for the user. Acceptable values are one of [DARK,\
            \ LIGHT]"
          type: string
        timeFormat:
          description: "The user's time format. Acceptable values are one of [TWELVE,\
            \ TWENTY_FOUR]"
          type: string
        locale:
          description: "The user's locale. Acceptable values are one of [EN, FR, IT,\
            \ RU, ES, DE, PT, RO, NL, PT_BR, ES_419, KO, JA, PL, AR, IW, ZH_CH, ZH_TW,\
            \ CS, SR, SV, VI]"
          type: string
        avatar:
          description: "The user's avatar, in base64 format"
          type: string
      type: object
    addWebhook_request:
      properties:
        subscriberUrl:
          description: The URL to subscribe to this webhook
          format: uri
          type: string
        eventTriggers:
          description: The events which should trigger this webhook call
          enum:
          - BOOKING_CREATED
          - BOOKING_RESCHEDULED
          - BOOKING_CANCELLED
          - MEETING_ENDED
          type: string
        active:
          description: Whether the webhook is active and should trigger on associated
            trigger events
          type: boolean
        payloadTemplate:
          description: The template of the webhook's payload
          type: string
        eventTypeId:
          description: The event type ID if this webhook should be associated with
            only that event type
          type: number
        secret:
          description: The secret to verify the authenticity of the received payload
          type: string
      required:
      - active
      - eventTriggers
      - subscriberUrl
      type: object
    editWebhookById_request:
      properties:
        subscriberUrl:
          description: The URL to subscribe to this webhook
          format: uri
          type: string
        eventTriggers:
          description: The events which should trigger this webhook call
          enum:
          - BOOKING_CREATED
          - BOOKING_RESCHEDULED
          - BOOKING_CANCELLED
          - MEETING_ENDED
          type: string
        active:
          description: Whether the webhook is active and should trigger on associated
            trigger events
          type: boolean
        payloadTemplate:
          description: The template of the webhook's payload
          type: string
        eventTypeId:
          description: The event type ID if this webhook should be associated with
            only that event type
          type: number
        secret:
          description: The secret to verify the authenticity of the received payload
          type: string
      type: object
    Booking_attendees_inner:
      example:
        name: name
        timeZone: Europe/London
        locale: en
        email: example@cal.com
      properties:
        email:
          example: example@cal.com
          type: string
        name:
          type: string
        timeZone:
          example: Europe/London
          type: string
        locale:
          example: en
          type: string
    Booking_payment_inner:
      example:
        success: true
        paymentOption: ON_BOOKING
        id: 1
      properties:
        id:
          example: 1
          type: number
        success:
          example: true
          type: boolean
        paymentOption:
          example: ON_BOOKING
          type: string
  securitySchemes:
    ApiKeyAuth:
      in: query
      name: apiKey
      type: apiKey
