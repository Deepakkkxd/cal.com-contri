/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CustomInputsIdPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomInputsIdPatchRequest{}

// CustomInputsIdPatchRequest struct for CustomInputsIdPatchRequest
type CustomInputsIdPatchRequest struct {
	// ID of the event type to which the custom input is being added
	EventTypeId *int32 `json:"eventTypeId,omitempty"`
	// Label of the custom input
	Label *string `json:"label,omitempty"`
	// Type of the custom input. The value is ENUM; one of [TEXT, TEXTLONG, NUMBER, BOOL, RADIO, PHONE]
	Type *string `json:"type,omitempty"`
	Options *CustomInputsPostRequestOptions `json:"options,omitempty"`
	// If the custom input is required before booking
	Required *bool `json:"required,omitempty"`
	// Placeholder text for the custom input
	Placeholder *string `json:"placeholder,omitempty"`
}

// NewCustomInputsIdPatchRequest instantiates a new CustomInputsIdPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomInputsIdPatchRequest() *CustomInputsIdPatchRequest {
	this := CustomInputsIdPatchRequest{}
	return &this
}

// NewCustomInputsIdPatchRequestWithDefaults instantiates a new CustomInputsIdPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomInputsIdPatchRequestWithDefaults() *CustomInputsIdPatchRequest {
	this := CustomInputsIdPatchRequest{}
	return &this
}

// GetEventTypeId returns the EventTypeId field value if set, zero value otherwise.
func (o *CustomInputsIdPatchRequest) GetEventTypeId() int32 {
	if o == nil || IsNil(o.EventTypeId) {
		var ret int32
		return ret
	}
	return *o.EventTypeId
}

// GetEventTypeIdOk returns a tuple with the EventTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomInputsIdPatchRequest) GetEventTypeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EventTypeId) {
		return nil, false
	}
	return o.EventTypeId, true
}

// HasEventTypeId returns a boolean if a field has been set.
func (o *CustomInputsIdPatchRequest) HasEventTypeId() bool {
	if o != nil && !IsNil(o.EventTypeId) {
		return true
	}

	return false
}

// SetEventTypeId gets a reference to the given int32 and assigns it to the EventTypeId field.
func (o *CustomInputsIdPatchRequest) SetEventTypeId(v int32) {
	o.EventTypeId = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CustomInputsIdPatchRequest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomInputsIdPatchRequest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CustomInputsIdPatchRequest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CustomInputsIdPatchRequest) SetLabel(v string) {
	o.Label = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CustomInputsIdPatchRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomInputsIdPatchRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CustomInputsIdPatchRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CustomInputsIdPatchRequest) SetType(v string) {
	o.Type = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CustomInputsIdPatchRequest) GetOptions() CustomInputsPostRequestOptions {
	if o == nil || IsNil(o.Options) {
		var ret CustomInputsPostRequestOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomInputsIdPatchRequest) GetOptionsOk() (*CustomInputsPostRequestOptions, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CustomInputsIdPatchRequest) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given CustomInputsPostRequestOptions and assigns it to the Options field.
func (o *CustomInputsIdPatchRequest) SetOptions(v CustomInputsPostRequestOptions) {
	o.Options = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *CustomInputsIdPatchRequest) GetRequired() bool {
	if o == nil || IsNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomInputsIdPatchRequest) GetRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *CustomInputsIdPatchRequest) HasRequired() bool {
	if o != nil && !IsNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *CustomInputsIdPatchRequest) SetRequired(v bool) {
	o.Required = &v
}

// GetPlaceholder returns the Placeholder field value if set, zero value otherwise.
func (o *CustomInputsIdPatchRequest) GetPlaceholder() string {
	if o == nil || IsNil(o.Placeholder) {
		var ret string
		return ret
	}
	return *o.Placeholder
}

// GetPlaceholderOk returns a tuple with the Placeholder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomInputsIdPatchRequest) GetPlaceholderOk() (*string, bool) {
	if o == nil || IsNil(o.Placeholder) {
		return nil, false
	}
	return o.Placeholder, true
}

// HasPlaceholder returns a boolean if a field has been set.
func (o *CustomInputsIdPatchRequest) HasPlaceholder() bool {
	if o != nil && !IsNil(o.Placeholder) {
		return true
	}

	return false
}

// SetPlaceholder gets a reference to the given string and assigns it to the Placeholder field.
func (o *CustomInputsIdPatchRequest) SetPlaceholder(v string) {
	o.Placeholder = &v
}

func (o CustomInputsIdPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomInputsIdPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EventTypeId) {
		toSerialize["eventTypeId"] = o.EventTypeId
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if !IsNil(o.Placeholder) {
		toSerialize["placeholder"] = o.Placeholder
	}
	return toSerialize, nil
}

type NullableCustomInputsIdPatchRequest struct {
	value *CustomInputsIdPatchRequest
	isSet bool
}

func (v NullableCustomInputsIdPatchRequest) Get() *CustomInputsIdPatchRequest {
	return v.value
}

func (v *NullableCustomInputsIdPatchRequest) Set(val *CustomInputsIdPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomInputsIdPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomInputsIdPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomInputsIdPatchRequest(val *CustomInputsIdPatchRequest) *NullableCustomInputsIdPatchRequest {
	return &NullableCustomInputsIdPatchRequest{value: val, isSet: true}
}

func (v NullableCustomInputsIdPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomInputsIdPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


