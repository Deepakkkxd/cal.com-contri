/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DestinationCalendarsIdPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DestinationCalendarsIdPatchRequest{}

// DestinationCalendarsIdPatchRequest struct for DestinationCalendarsIdPatchRequest
type DestinationCalendarsIdPatchRequest struct {
	// The integration
	Integration *string `json:"integration,omitempty"`
	// The external ID of the integration
	ExternalId *string `json:"externalId,omitempty"`
	// The ID of the eventType it is associated with
	EventTypeId *int32 `json:"eventTypeId,omitempty"`
	// The booking ID it is associated with
	BookingId *int32 `json:"bookingId,omitempty"`
}

// NewDestinationCalendarsIdPatchRequest instantiates a new DestinationCalendarsIdPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestinationCalendarsIdPatchRequest() *DestinationCalendarsIdPatchRequest {
	this := DestinationCalendarsIdPatchRequest{}
	return &this
}

// NewDestinationCalendarsIdPatchRequestWithDefaults instantiates a new DestinationCalendarsIdPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestinationCalendarsIdPatchRequestWithDefaults() *DestinationCalendarsIdPatchRequest {
	this := DestinationCalendarsIdPatchRequest{}
	return &this
}

// GetIntegration returns the Integration field value if set, zero value otherwise.
func (o *DestinationCalendarsIdPatchRequest) GetIntegration() string {
	if o == nil || IsNil(o.Integration) {
		var ret string
		return ret
	}
	return *o.Integration
}

// GetIntegrationOk returns a tuple with the Integration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationCalendarsIdPatchRequest) GetIntegrationOk() (*string, bool) {
	if o == nil || IsNil(o.Integration) {
		return nil, false
	}
	return o.Integration, true
}

// HasIntegration returns a boolean if a field has been set.
func (o *DestinationCalendarsIdPatchRequest) HasIntegration() bool {
	if o != nil && !IsNil(o.Integration) {
		return true
	}

	return false
}

// SetIntegration gets a reference to the given string and assigns it to the Integration field.
func (o *DestinationCalendarsIdPatchRequest) SetIntegration(v string) {
	o.Integration = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *DestinationCalendarsIdPatchRequest) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationCalendarsIdPatchRequest) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *DestinationCalendarsIdPatchRequest) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *DestinationCalendarsIdPatchRequest) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetEventTypeId returns the EventTypeId field value if set, zero value otherwise.
func (o *DestinationCalendarsIdPatchRequest) GetEventTypeId() int32 {
	if o == nil || IsNil(o.EventTypeId) {
		var ret int32
		return ret
	}
	return *o.EventTypeId
}

// GetEventTypeIdOk returns a tuple with the EventTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationCalendarsIdPatchRequest) GetEventTypeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EventTypeId) {
		return nil, false
	}
	return o.EventTypeId, true
}

// HasEventTypeId returns a boolean if a field has been set.
func (o *DestinationCalendarsIdPatchRequest) HasEventTypeId() bool {
	if o != nil && !IsNil(o.EventTypeId) {
		return true
	}

	return false
}

// SetEventTypeId gets a reference to the given int32 and assigns it to the EventTypeId field.
func (o *DestinationCalendarsIdPatchRequest) SetEventTypeId(v int32) {
	o.EventTypeId = &v
}

// GetBookingId returns the BookingId field value if set, zero value otherwise.
func (o *DestinationCalendarsIdPatchRequest) GetBookingId() int32 {
	if o == nil || IsNil(o.BookingId) {
		var ret int32
		return ret
	}
	return *o.BookingId
}

// GetBookingIdOk returns a tuple with the BookingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationCalendarsIdPatchRequest) GetBookingIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BookingId) {
		return nil, false
	}
	return o.BookingId, true
}

// HasBookingId returns a boolean if a field has been set.
func (o *DestinationCalendarsIdPatchRequest) HasBookingId() bool {
	if o != nil && !IsNil(o.BookingId) {
		return true
	}

	return false
}

// SetBookingId gets a reference to the given int32 and assigns it to the BookingId field.
func (o *DestinationCalendarsIdPatchRequest) SetBookingId(v int32) {
	o.BookingId = &v
}

func (o DestinationCalendarsIdPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DestinationCalendarsIdPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Integration) {
		toSerialize["integration"] = o.Integration
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.EventTypeId) {
		toSerialize["eventTypeId"] = o.EventTypeId
	}
	if !IsNil(o.BookingId) {
		toSerialize["bookingId"] = o.BookingId
	}
	return toSerialize, nil
}

type NullableDestinationCalendarsIdPatchRequest struct {
	value *DestinationCalendarsIdPatchRequest
	isSet bool
}

func (v NullableDestinationCalendarsIdPatchRequest) Get() *DestinationCalendarsIdPatchRequest {
	return v.value
}

func (v *NullableDestinationCalendarsIdPatchRequest) Set(val *DestinationCalendarsIdPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDestinationCalendarsIdPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDestinationCalendarsIdPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestinationCalendarsIdPatchRequest(val *DestinationCalendarsIdPatchRequest) *NullableDestinationCalendarsIdPatchRequest {
	return &NullableDestinationCalendarsIdPatchRequest{value: val, isSet: true}
}

func (v NullableDestinationCalendarsIdPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestinationCalendarsIdPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


