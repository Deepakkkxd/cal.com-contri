/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the DestinationCalendarsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DestinationCalendarsPostRequest{}

// DestinationCalendarsPostRequest struct for DestinationCalendarsPostRequest
type DestinationCalendarsPostRequest struct {
	// The integration
	Integration string `json:"integration"`
	// The external ID of the integration
	ExternalId string `json:"externalId"`
	// The ID of the eventType it is associated with
	EventTypeId *int32 `json:"eventTypeId,omitempty"`
	// The booking ID it is associated with
	BookingId *int32 `json:"bookingId,omitempty"`
	// The user it is associated with
	UserId *int32 `json:"userId,omitempty"`
}

type _DestinationCalendarsPostRequest DestinationCalendarsPostRequest

// NewDestinationCalendarsPostRequest instantiates a new DestinationCalendarsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestinationCalendarsPostRequest(integration string, externalId string) *DestinationCalendarsPostRequest {
	this := DestinationCalendarsPostRequest{}
	this.Integration = integration
	this.ExternalId = externalId
	return &this
}

// NewDestinationCalendarsPostRequestWithDefaults instantiates a new DestinationCalendarsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestinationCalendarsPostRequestWithDefaults() *DestinationCalendarsPostRequest {
	this := DestinationCalendarsPostRequest{}
	return &this
}

// GetIntegration returns the Integration field value
func (o *DestinationCalendarsPostRequest) GetIntegration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Integration
}

// GetIntegrationOk returns a tuple with the Integration field value
// and a boolean to check if the value has been set.
func (o *DestinationCalendarsPostRequest) GetIntegrationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Integration, true
}

// SetIntegration sets field value
func (o *DestinationCalendarsPostRequest) SetIntegration(v string) {
	o.Integration = v
}

// GetExternalId returns the ExternalId field value
func (o *DestinationCalendarsPostRequest) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *DestinationCalendarsPostRequest) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *DestinationCalendarsPostRequest) SetExternalId(v string) {
	o.ExternalId = v
}

// GetEventTypeId returns the EventTypeId field value if set, zero value otherwise.
func (o *DestinationCalendarsPostRequest) GetEventTypeId() int32 {
	if o == nil || IsNil(o.EventTypeId) {
		var ret int32
		return ret
	}
	return *o.EventTypeId
}

// GetEventTypeIdOk returns a tuple with the EventTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationCalendarsPostRequest) GetEventTypeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.EventTypeId) {
		return nil, false
	}
	return o.EventTypeId, true
}

// HasEventTypeId returns a boolean if a field has been set.
func (o *DestinationCalendarsPostRequest) HasEventTypeId() bool {
	if o != nil && !IsNil(o.EventTypeId) {
		return true
	}

	return false
}

// SetEventTypeId gets a reference to the given int32 and assigns it to the EventTypeId field.
func (o *DestinationCalendarsPostRequest) SetEventTypeId(v int32) {
	o.EventTypeId = &v
}

// GetBookingId returns the BookingId field value if set, zero value otherwise.
func (o *DestinationCalendarsPostRequest) GetBookingId() int32 {
	if o == nil || IsNil(o.BookingId) {
		var ret int32
		return ret
	}
	return *o.BookingId
}

// GetBookingIdOk returns a tuple with the BookingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationCalendarsPostRequest) GetBookingIdOk() (*int32, bool) {
	if o == nil || IsNil(o.BookingId) {
		return nil, false
	}
	return o.BookingId, true
}

// HasBookingId returns a boolean if a field has been set.
func (o *DestinationCalendarsPostRequest) HasBookingId() bool {
	if o != nil && !IsNil(o.BookingId) {
		return true
	}

	return false
}

// SetBookingId gets a reference to the given int32 and assigns it to the BookingId field.
func (o *DestinationCalendarsPostRequest) SetBookingId(v int32) {
	o.BookingId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *DestinationCalendarsPostRequest) GetUserId() int32 {
	if o == nil || IsNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationCalendarsPostRequest) GetUserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *DestinationCalendarsPostRequest) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *DestinationCalendarsPostRequest) SetUserId(v int32) {
	o.UserId = &v
}

func (o DestinationCalendarsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DestinationCalendarsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["integration"] = o.Integration
	toSerialize["externalId"] = o.ExternalId
	if !IsNil(o.EventTypeId) {
		toSerialize["eventTypeId"] = o.EventTypeId
	}
	if !IsNil(o.BookingId) {
		toSerialize["bookingId"] = o.BookingId
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

func (o *DestinationCalendarsPostRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"integration",
		"externalId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDestinationCalendarsPostRequest := _DestinationCalendarsPostRequest{}

	err = json.Unmarshal(bytes, &varDestinationCalendarsPostRequest)

	if err != nil {
		return err
	}

	*o = DestinationCalendarsPostRequest(varDestinationCalendarsPostRequest)

	return err
}

type NullableDestinationCalendarsPostRequest struct {
	value *DestinationCalendarsPostRequest
	isSet bool
}

func (v NullableDestinationCalendarsPostRequest) Get() *DestinationCalendarsPostRequest {
	return v.value
}

func (v *NullableDestinationCalendarsPostRequest) Set(val *DestinationCalendarsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDestinationCalendarsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDestinationCalendarsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestinationCalendarsPostRequest(val *DestinationCalendarsPostRequest) *NullableDestinationCalendarsPostRequest {
	return &NullableDestinationCalendarsPostRequest{value: val, isSet: true}
}

func (v NullableDestinationCalendarsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestinationCalendarsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


