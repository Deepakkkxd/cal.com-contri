/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the SelectedCalendarsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SelectedCalendarsPostRequest{}

// SelectedCalendarsPostRequest struct for SelectedCalendarsPostRequest
type SelectedCalendarsPostRequest struct {
	// The integration name
	Integration string `json:"integration"`
	// The external ID of the integration
	ExternalId string `json:"externalId"`
}

type _SelectedCalendarsPostRequest SelectedCalendarsPostRequest

// NewSelectedCalendarsPostRequest instantiates a new SelectedCalendarsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelectedCalendarsPostRequest(integration string, externalId string) *SelectedCalendarsPostRequest {
	this := SelectedCalendarsPostRequest{}
	this.Integration = integration
	this.ExternalId = externalId
	return &this
}

// NewSelectedCalendarsPostRequestWithDefaults instantiates a new SelectedCalendarsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelectedCalendarsPostRequestWithDefaults() *SelectedCalendarsPostRequest {
	this := SelectedCalendarsPostRequest{}
	return &this
}

// GetIntegration returns the Integration field value
func (o *SelectedCalendarsPostRequest) GetIntegration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Integration
}

// GetIntegrationOk returns a tuple with the Integration field value
// and a boolean to check if the value has been set.
func (o *SelectedCalendarsPostRequest) GetIntegrationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Integration, true
}

// SetIntegration sets field value
func (o *SelectedCalendarsPostRequest) SetIntegration(v string) {
	o.Integration = v
}

// GetExternalId returns the ExternalId field value
func (o *SelectedCalendarsPostRequest) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *SelectedCalendarsPostRequest) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *SelectedCalendarsPostRequest) SetExternalId(v string) {
	o.ExternalId = v
}

func (o SelectedCalendarsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SelectedCalendarsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["integration"] = o.Integration
	toSerialize["externalId"] = o.ExternalId
	return toSerialize, nil
}

func (o *SelectedCalendarsPostRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"integration",
		"externalId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSelectedCalendarsPostRequest := _SelectedCalendarsPostRequest{}

	err = json.Unmarshal(bytes, &varSelectedCalendarsPostRequest)

	if err != nil {
		return err
	}

	*o = SelectedCalendarsPostRequest(varSelectedCalendarsPostRequest)

	return err
}

type NullableSelectedCalendarsPostRequest struct {
	value *SelectedCalendarsPostRequest
	isSet bool
}

func (v NullableSelectedCalendarsPostRequest) Get() *SelectedCalendarsPostRequest {
	return v.value
}

func (v *NullableSelectedCalendarsPostRequest) Set(val *SelectedCalendarsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSelectedCalendarsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSelectedCalendarsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelectedCalendarsPostRequest(val *SelectedCalendarsPostRequest) *NullableSelectedCalendarsPostRequest {
	return &NullableSelectedCalendarsPostRequest{value: val, isSet: true}
}

func (v NullableSelectedCalendarsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelectedCalendarsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


