/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the AddAvailabilityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddAvailabilityRequest{}

// AddAvailabilityRequest struct for AddAvailabilityRequest
type AddAvailabilityRequest struct {
	// Array of integers depicting weekdays
	Days []int32 `json:"days,omitempty"`
	// ID of schedule this availability is associated with
	ScheduleId int32 `json:"scheduleId"`
	// Start time of the availability
	StartTime string `json:"startTime"`
	// End time of the availability
	EndTime string `json:"endTime"`
}

type _AddAvailabilityRequest AddAvailabilityRequest

// NewAddAvailabilityRequest instantiates a new AddAvailabilityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddAvailabilityRequest(scheduleId int32, startTime string, endTime string) *AddAvailabilityRequest {
	this := AddAvailabilityRequest{}
	this.ScheduleId = scheduleId
	this.StartTime = startTime
	this.EndTime = endTime
	return &this
}

// NewAddAvailabilityRequestWithDefaults instantiates a new AddAvailabilityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAvailabilityRequestWithDefaults() *AddAvailabilityRequest {
	this := AddAvailabilityRequest{}
	return &this
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *AddAvailabilityRequest) GetDays() []int32 {
	if o == nil || IsNil(o.Days) {
		var ret []int32
		return ret
	}
	return o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAvailabilityRequest) GetDaysOk() ([]int32, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *AddAvailabilityRequest) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given []int32 and assigns it to the Days field.
func (o *AddAvailabilityRequest) SetDays(v []int32) {
	o.Days = v
}

// GetScheduleId returns the ScheduleId field value
func (o *AddAvailabilityRequest) GetScheduleId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ScheduleId
}

// GetScheduleIdOk returns a tuple with the ScheduleId field value
// and a boolean to check if the value has been set.
func (o *AddAvailabilityRequest) GetScheduleIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduleId, true
}

// SetScheduleId sets field value
func (o *AddAvailabilityRequest) SetScheduleId(v int32) {
	o.ScheduleId = v
}

// GetStartTime returns the StartTime field value
func (o *AddAvailabilityRequest) GetStartTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *AddAvailabilityRequest) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *AddAvailabilityRequest) SetStartTime(v string) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *AddAvailabilityRequest) GetEndTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *AddAvailabilityRequest) GetEndTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *AddAvailabilityRequest) SetEndTime(v string) {
	o.EndTime = v
}

func (o AddAvailabilityRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddAvailabilityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	toSerialize["scheduleId"] = o.ScheduleId
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	return toSerialize, nil
}

func (o *AddAvailabilityRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"scheduleId",
		"startTime",
		"endTime",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddAvailabilityRequest := _AddAvailabilityRequest{}

	err = json.Unmarshal(bytes, &varAddAvailabilityRequest)

	if err != nil {
		return err
	}

	*o = AddAvailabilityRequest(varAddAvailabilityRequest)

	return err
}

type NullableAddAvailabilityRequest struct {
	value *AddAvailabilityRequest
	isSet bool
}

func (v NullableAddAvailabilityRequest) Get() *AddAvailabilityRequest {
	return v.value
}

func (v *NullableAddAvailabilityRequest) Set(val *AddAvailabilityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAvailabilityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAvailabilityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAvailabilityRequest(val *AddAvailabilityRequest) *NullableAddAvailabilityRequest {
	return &NullableAddAvailabilityRequest{value: val, isSet: true}
}

func (v NullableAddAvailabilityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAvailabilityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


