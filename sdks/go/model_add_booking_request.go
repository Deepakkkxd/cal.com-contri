/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the AddBookingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddBookingRequest{}

// AddBookingRequest struct for AddBookingRequest
type AddBookingRequest struct {
	// ID of the event type to book
	EventTypeId int32 `json:"eventTypeId"`
	// Start time of the Event
	Start time.Time `json:"start"`
	// End time of the Event
	End *time.Time `json:"end,omitempty"`
	Responses AddBookingRequestResponses `json:"responses"`
	// Any metadata associated with the booking
	Metadata map[string]interface{} `json:"metadata"`
	// TimeZone of the Attendee
	TimeZone string `json:"timeZone"`
	// Language of the Attendee
	Language string `json:"language"`
	// Booking event title
	Title *string `json:"title,omitempty"`
	// Recurring event ID if the event is recurring
	RecurringEventId *int32 `json:"recurringEventId,omitempty"`
	// Event description
	Description *string `json:"description,omitempty"`
	// Acceptable values one of [\"ACCEPTED\", \"PENDING\", \"CANCELLED\", \"REJECTED\"]
	Status *string `json:"status,omitempty"`
	// The number of seats for each time slot
	SeatsPerTimeSlot *int32 `json:"seatsPerTimeSlot,omitempty"`
	// Share Attendee information in seats
	SeatsShowAttendees *bool `json:"seatsShowAttendees,omitempty"`
	// Show the number of available seats
	SeatsShowAvailabilityCount *bool `json:"seatsShowAvailabilityCount,omitempty"`
	// SMS reminder number
	SmsReminderNumber *float32 `json:"smsReminderNumber,omitempty"`
}

type _AddBookingRequest AddBookingRequest

// NewAddBookingRequest instantiates a new AddBookingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBookingRequest(eventTypeId int32, start time.Time, responses AddBookingRequestResponses, metadata map[string]interface{}, timeZone string, language string) *AddBookingRequest {
	this := AddBookingRequest{}
	this.EventTypeId = eventTypeId
	this.Start = start
	this.Responses = responses
	this.Metadata = metadata
	this.TimeZone = timeZone
	this.Language = language
	return &this
}

// NewAddBookingRequestWithDefaults instantiates a new AddBookingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBookingRequestWithDefaults() *AddBookingRequest {
	this := AddBookingRequest{}
	return &this
}

// GetEventTypeId returns the EventTypeId field value
func (o *AddBookingRequest) GetEventTypeId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EventTypeId
}

// GetEventTypeIdOk returns a tuple with the EventTypeId field value
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetEventTypeIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventTypeId, true
}

// SetEventTypeId sets field value
func (o *AddBookingRequest) SetEventTypeId(v int32) {
	o.EventTypeId = v
}

// GetStart returns the Start field value
func (o *AddBookingRequest) GetStart() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *AddBookingRequest) SetStart(v time.Time) {
	o.Start = v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *AddBookingRequest) GetEnd() time.Time {
	if o == nil || IsNil(o.End) {
		var ret time.Time
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetEndOk() (*time.Time, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *AddBookingRequest) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given time.Time and assigns it to the End field.
func (o *AddBookingRequest) SetEnd(v time.Time) {
	o.End = &v
}

// GetResponses returns the Responses field value
func (o *AddBookingRequest) GetResponses() AddBookingRequestResponses {
	if o == nil {
		var ret AddBookingRequestResponses
		return ret
	}

	return o.Responses
}

// GetResponsesOk returns a tuple with the Responses field value
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetResponsesOk() (*AddBookingRequestResponses, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Responses, true
}

// SetResponses sets field value
func (o *AddBookingRequest) SetResponses(v AddBookingRequestResponses) {
	o.Responses = v
}

// GetMetadata returns the Metadata field value
func (o *AddBookingRequest) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// SetMetadata sets field value
func (o *AddBookingRequest) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetTimeZone returns the TimeZone field value
func (o *AddBookingRequest) GetTimeZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetTimeZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeZone, true
}

// SetTimeZone sets field value
func (o *AddBookingRequest) SetTimeZone(v string) {
	o.TimeZone = v
}

// GetLanguage returns the Language field value
func (o *AddBookingRequest) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *AddBookingRequest) SetLanguage(v string) {
	o.Language = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AddBookingRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AddBookingRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AddBookingRequest) SetTitle(v string) {
	o.Title = &v
}

// GetRecurringEventId returns the RecurringEventId field value if set, zero value otherwise.
func (o *AddBookingRequest) GetRecurringEventId() int32 {
	if o == nil || IsNil(o.RecurringEventId) {
		var ret int32
		return ret
	}
	return *o.RecurringEventId
}

// GetRecurringEventIdOk returns a tuple with the RecurringEventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetRecurringEventIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RecurringEventId) {
		return nil, false
	}
	return o.RecurringEventId, true
}

// HasRecurringEventId returns a boolean if a field has been set.
func (o *AddBookingRequest) HasRecurringEventId() bool {
	if o != nil && !IsNil(o.RecurringEventId) {
		return true
	}

	return false
}

// SetRecurringEventId gets a reference to the given int32 and assigns it to the RecurringEventId field.
func (o *AddBookingRequest) SetRecurringEventId(v int32) {
	o.RecurringEventId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddBookingRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddBookingRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddBookingRequest) SetDescription(v string) {
	o.Description = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AddBookingRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AddBookingRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AddBookingRequest) SetStatus(v string) {
	o.Status = &v
}

// GetSeatsPerTimeSlot returns the SeatsPerTimeSlot field value if set, zero value otherwise.
func (o *AddBookingRequest) GetSeatsPerTimeSlot() int32 {
	if o == nil || IsNil(o.SeatsPerTimeSlot) {
		var ret int32
		return ret
	}
	return *o.SeatsPerTimeSlot
}

// GetSeatsPerTimeSlotOk returns a tuple with the SeatsPerTimeSlot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetSeatsPerTimeSlotOk() (*int32, bool) {
	if o == nil || IsNil(o.SeatsPerTimeSlot) {
		return nil, false
	}
	return o.SeatsPerTimeSlot, true
}

// HasSeatsPerTimeSlot returns a boolean if a field has been set.
func (o *AddBookingRequest) HasSeatsPerTimeSlot() bool {
	if o != nil && !IsNil(o.SeatsPerTimeSlot) {
		return true
	}

	return false
}

// SetSeatsPerTimeSlot gets a reference to the given int32 and assigns it to the SeatsPerTimeSlot field.
func (o *AddBookingRequest) SetSeatsPerTimeSlot(v int32) {
	o.SeatsPerTimeSlot = &v
}

// GetSeatsShowAttendees returns the SeatsShowAttendees field value if set, zero value otherwise.
func (o *AddBookingRequest) GetSeatsShowAttendees() bool {
	if o == nil || IsNil(o.SeatsShowAttendees) {
		var ret bool
		return ret
	}
	return *o.SeatsShowAttendees
}

// GetSeatsShowAttendeesOk returns a tuple with the SeatsShowAttendees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetSeatsShowAttendeesOk() (*bool, bool) {
	if o == nil || IsNil(o.SeatsShowAttendees) {
		return nil, false
	}
	return o.SeatsShowAttendees, true
}

// HasSeatsShowAttendees returns a boolean if a field has been set.
func (o *AddBookingRequest) HasSeatsShowAttendees() bool {
	if o != nil && !IsNil(o.SeatsShowAttendees) {
		return true
	}

	return false
}

// SetSeatsShowAttendees gets a reference to the given bool and assigns it to the SeatsShowAttendees field.
func (o *AddBookingRequest) SetSeatsShowAttendees(v bool) {
	o.SeatsShowAttendees = &v
}

// GetSeatsShowAvailabilityCount returns the SeatsShowAvailabilityCount field value if set, zero value otherwise.
func (o *AddBookingRequest) GetSeatsShowAvailabilityCount() bool {
	if o == nil || IsNil(o.SeatsShowAvailabilityCount) {
		var ret bool
		return ret
	}
	return *o.SeatsShowAvailabilityCount
}

// GetSeatsShowAvailabilityCountOk returns a tuple with the SeatsShowAvailabilityCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetSeatsShowAvailabilityCountOk() (*bool, bool) {
	if o == nil || IsNil(o.SeatsShowAvailabilityCount) {
		return nil, false
	}
	return o.SeatsShowAvailabilityCount, true
}

// HasSeatsShowAvailabilityCount returns a boolean if a field has been set.
func (o *AddBookingRequest) HasSeatsShowAvailabilityCount() bool {
	if o != nil && !IsNil(o.SeatsShowAvailabilityCount) {
		return true
	}

	return false
}

// SetSeatsShowAvailabilityCount gets a reference to the given bool and assigns it to the SeatsShowAvailabilityCount field.
func (o *AddBookingRequest) SetSeatsShowAvailabilityCount(v bool) {
	o.SeatsShowAvailabilityCount = &v
}

// GetSmsReminderNumber returns the SmsReminderNumber field value if set, zero value otherwise.
func (o *AddBookingRequest) GetSmsReminderNumber() float32 {
	if o == nil || IsNil(o.SmsReminderNumber) {
		var ret float32
		return ret
	}
	return *o.SmsReminderNumber
}

// GetSmsReminderNumberOk returns a tuple with the SmsReminderNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddBookingRequest) GetSmsReminderNumberOk() (*float32, bool) {
	if o == nil || IsNil(o.SmsReminderNumber) {
		return nil, false
	}
	return o.SmsReminderNumber, true
}

// HasSmsReminderNumber returns a boolean if a field has been set.
func (o *AddBookingRequest) HasSmsReminderNumber() bool {
	if o != nil && !IsNil(o.SmsReminderNumber) {
		return true
	}

	return false
}

// SetSmsReminderNumber gets a reference to the given float32 and assigns it to the SmsReminderNumber field.
func (o *AddBookingRequest) SetSmsReminderNumber(v float32) {
	o.SmsReminderNumber = &v
}

func (o AddBookingRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddBookingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["eventTypeId"] = o.EventTypeId
	toSerialize["start"] = o.Start
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	toSerialize["responses"] = o.Responses
	toSerialize["metadata"] = o.Metadata
	toSerialize["timeZone"] = o.TimeZone
	toSerialize["language"] = o.Language
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.RecurringEventId) {
		toSerialize["recurringEventId"] = o.RecurringEventId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SeatsPerTimeSlot) {
		toSerialize["seatsPerTimeSlot"] = o.SeatsPerTimeSlot
	}
	if !IsNil(o.SeatsShowAttendees) {
		toSerialize["seatsShowAttendees"] = o.SeatsShowAttendees
	}
	if !IsNil(o.SeatsShowAvailabilityCount) {
		toSerialize["seatsShowAvailabilityCount"] = o.SeatsShowAvailabilityCount
	}
	if !IsNil(o.SmsReminderNumber) {
		toSerialize["smsReminderNumber"] = o.SmsReminderNumber
	}
	return toSerialize, nil
}

func (o *AddBookingRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"eventTypeId",
		"start",
		"responses",
		"metadata",
		"timeZone",
		"language",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddBookingRequest := _AddBookingRequest{}

	err = json.Unmarshal(bytes, &varAddBookingRequest)

	if err != nil {
		return err
	}

	*o = AddBookingRequest(varAddBookingRequest)

	return err
}

type NullableAddBookingRequest struct {
	value *AddBookingRequest
	isSet bool
}

func (v NullableAddBookingRequest) Get() *AddBookingRequest {
	return v.value
}

func (v *NullableAddBookingRequest) Set(val *AddBookingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBookingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBookingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBookingRequest(val *AddBookingRequest) *NullableAddBookingRequest {
	return &NullableAddBookingRequest{value: val, isSet: true}
}

func (v NullableAddBookingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBookingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


