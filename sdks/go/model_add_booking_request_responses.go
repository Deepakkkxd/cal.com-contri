/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the AddBookingRequestResponses type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddBookingRequestResponses{}

// AddBookingRequestResponses struct for AddBookingRequestResponses
type AddBookingRequestResponses struct {
	// Attendee full name
	Name string `json:"name"`
	// Attendee email address
	Email string `json:"email"`
	Location AddBookingRequestResponsesLocation `json:"location"`
}

type _AddBookingRequestResponses AddBookingRequestResponses

// NewAddBookingRequestResponses instantiates a new AddBookingRequestResponses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBookingRequestResponses(name string, email string, location AddBookingRequestResponsesLocation) *AddBookingRequestResponses {
	this := AddBookingRequestResponses{}
	this.Name = name
	this.Email = email
	this.Location = location
	return &this
}

// NewAddBookingRequestResponsesWithDefaults instantiates a new AddBookingRequestResponses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBookingRequestResponsesWithDefaults() *AddBookingRequestResponses {
	this := AddBookingRequestResponses{}
	return &this
}

// GetName returns the Name field value
func (o *AddBookingRequestResponses) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddBookingRequestResponses) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddBookingRequestResponses) SetName(v string) {
	o.Name = v
}

// GetEmail returns the Email field value
func (o *AddBookingRequestResponses) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *AddBookingRequestResponses) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *AddBookingRequestResponses) SetEmail(v string) {
	o.Email = v
}

// GetLocation returns the Location field value
func (o *AddBookingRequestResponses) GetLocation() AddBookingRequestResponsesLocation {
	if o == nil {
		var ret AddBookingRequestResponsesLocation
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *AddBookingRequestResponses) GetLocationOk() (*AddBookingRequestResponsesLocation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *AddBookingRequestResponses) SetLocation(v AddBookingRequestResponsesLocation) {
	o.Location = v
}

func (o AddBookingRequestResponses) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddBookingRequestResponses) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["email"] = o.Email
	toSerialize["location"] = o.Location
	return toSerialize, nil
}

func (o *AddBookingRequestResponses) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"email",
		"location",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddBookingRequestResponses := _AddBookingRequestResponses{}

	err = json.Unmarshal(bytes, &varAddBookingRequestResponses)

	if err != nil {
		return err
	}

	*o = AddBookingRequestResponses(varAddBookingRequestResponses)

	return err
}

type NullableAddBookingRequestResponses struct {
	value *AddBookingRequestResponses
	isSet bool
}

func (v NullableAddBookingRequestResponses) Get() *AddBookingRequestResponses {
	return v.value
}

func (v *NullableAddBookingRequestResponses) Set(val *AddBookingRequestResponses) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBookingRequestResponses) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBookingRequestResponses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBookingRequestResponses(val *AddBookingRequestResponses) *NullableAddBookingRequestResponses {
	return &NullableAddBookingRequestResponses{value: val, isSet: true}
}

func (v NullableAddBookingRequestResponses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBookingRequestResponses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


