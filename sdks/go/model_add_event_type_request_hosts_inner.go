/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddEventTypeRequestHostsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddEventTypeRequestHostsInner{}

// AddEventTypeRequestHostsInner struct for AddEventTypeRequestHostsInner
type AddEventTypeRequestHostsInner struct {
	UserId *float32 `json:"userId,omitempty"`
	// Host MUST be available for any slot to be bookable.
	IsFixed *bool `json:"isFixed,omitempty"`
}

// NewAddEventTypeRequestHostsInner instantiates a new AddEventTypeRequestHostsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddEventTypeRequestHostsInner() *AddEventTypeRequestHostsInner {
	this := AddEventTypeRequestHostsInner{}
	return &this
}

// NewAddEventTypeRequestHostsInnerWithDefaults instantiates a new AddEventTypeRequestHostsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddEventTypeRequestHostsInnerWithDefaults() *AddEventTypeRequestHostsInner {
	this := AddEventTypeRequestHostsInner{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AddEventTypeRequestHostsInner) GetUserId() float32 {
	if o == nil || IsNil(o.UserId) {
		var ret float32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddEventTypeRequestHostsInner) GetUserIdOk() (*float32, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AddEventTypeRequestHostsInner) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given float32 and assigns it to the UserId field.
func (o *AddEventTypeRequestHostsInner) SetUserId(v float32) {
	o.UserId = &v
}

// GetIsFixed returns the IsFixed field value if set, zero value otherwise.
func (o *AddEventTypeRequestHostsInner) GetIsFixed() bool {
	if o == nil || IsNil(o.IsFixed) {
		var ret bool
		return ret
	}
	return *o.IsFixed
}

// GetIsFixedOk returns a tuple with the IsFixed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddEventTypeRequestHostsInner) GetIsFixedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFixed) {
		return nil, false
	}
	return o.IsFixed, true
}

// HasIsFixed returns a boolean if a field has been set.
func (o *AddEventTypeRequestHostsInner) HasIsFixed() bool {
	if o != nil && !IsNil(o.IsFixed) {
		return true
	}

	return false
}

// SetIsFixed gets a reference to the given bool and assigns it to the IsFixed field.
func (o *AddEventTypeRequestHostsInner) SetIsFixed(v bool) {
	o.IsFixed = &v
}

func (o AddEventTypeRequestHostsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddEventTypeRequestHostsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.IsFixed) {
		toSerialize["isFixed"] = o.IsFixed
	}
	return toSerialize, nil
}

type NullableAddEventTypeRequestHostsInner struct {
	value *AddEventTypeRequestHostsInner
	isSet bool
}

func (v NullableAddEventTypeRequestHostsInner) Get() *AddEventTypeRequestHostsInner {
	return v.value
}

func (v *NullableAddEventTypeRequestHostsInner) Set(val *AddEventTypeRequestHostsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAddEventTypeRequestHostsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAddEventTypeRequestHostsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddEventTypeRequestHostsInner(val *AddEventTypeRequestHostsInner) *NullableAddEventTypeRequestHostsInner {
	return &NullableAddEventTypeRequestHostsInner{value: val, isSet: true}
}

func (v NullableAddEventTypeRequestHostsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddEventTypeRequestHostsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


