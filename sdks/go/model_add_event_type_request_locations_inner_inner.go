/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddEventTypeRequestLocationsInnerInner - struct for AddEventTypeRequestLocationsInnerInner
type AddEventTypeRequestLocationsInnerInner struct {
	AddEventTypeRequestLocationsInnerInnerOneOf *AddEventTypeRequestLocationsInnerInnerOneOf
	AddEventTypeRequestLocationsInnerInnerOneOf1 *AddEventTypeRequestLocationsInnerInnerOneOf1
	AddEventTypeRequestLocationsInnerInnerOneOf2 *AddEventTypeRequestLocationsInnerInnerOneOf2
	AddEventTypeRequestLocationsInnerInnerOneOf3 *AddEventTypeRequestLocationsInnerInnerOneOf3
}

// AddEventTypeRequestLocationsInnerInnerOneOfAsAddEventTypeRequestLocationsInnerInner is a convenience function that returns AddEventTypeRequestLocationsInnerInnerOneOf wrapped in AddEventTypeRequestLocationsInnerInner
func AddEventTypeRequestLocationsInnerInnerOneOfAsAddEventTypeRequestLocationsInnerInner(v *AddEventTypeRequestLocationsInnerInnerOneOf) AddEventTypeRequestLocationsInnerInner {
	return AddEventTypeRequestLocationsInnerInner{
		AddEventTypeRequestLocationsInnerInnerOneOf: v,
	}
}

// AddEventTypeRequestLocationsInnerInnerOneOf1AsAddEventTypeRequestLocationsInnerInner is a convenience function that returns AddEventTypeRequestLocationsInnerInnerOneOf1 wrapped in AddEventTypeRequestLocationsInnerInner
func AddEventTypeRequestLocationsInnerInnerOneOf1AsAddEventTypeRequestLocationsInnerInner(v *AddEventTypeRequestLocationsInnerInnerOneOf1) AddEventTypeRequestLocationsInnerInner {
	return AddEventTypeRequestLocationsInnerInner{
		AddEventTypeRequestLocationsInnerInnerOneOf1: v,
	}
}

// AddEventTypeRequestLocationsInnerInnerOneOf2AsAddEventTypeRequestLocationsInnerInner is a convenience function that returns AddEventTypeRequestLocationsInnerInnerOneOf2 wrapped in AddEventTypeRequestLocationsInnerInner
func AddEventTypeRequestLocationsInnerInnerOneOf2AsAddEventTypeRequestLocationsInnerInner(v *AddEventTypeRequestLocationsInnerInnerOneOf2) AddEventTypeRequestLocationsInnerInner {
	return AddEventTypeRequestLocationsInnerInner{
		AddEventTypeRequestLocationsInnerInnerOneOf2: v,
	}
}

// AddEventTypeRequestLocationsInnerInnerOneOf3AsAddEventTypeRequestLocationsInnerInner is a convenience function that returns AddEventTypeRequestLocationsInnerInnerOneOf3 wrapped in AddEventTypeRequestLocationsInnerInner
func AddEventTypeRequestLocationsInnerInnerOneOf3AsAddEventTypeRequestLocationsInnerInner(v *AddEventTypeRequestLocationsInnerInnerOneOf3) AddEventTypeRequestLocationsInnerInner {
	return AddEventTypeRequestLocationsInnerInner{
		AddEventTypeRequestLocationsInnerInnerOneOf3: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddEventTypeRequestLocationsInnerInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddEventTypeRequestLocationsInnerInnerOneOf
	err = newStrictDecoder(data).Decode(&dst.AddEventTypeRequestLocationsInnerInnerOneOf)
	if err == nil {
		jsonAddEventTypeRequestLocationsInnerInnerOneOf, _ := json.Marshal(dst.AddEventTypeRequestLocationsInnerInnerOneOf)
		if string(jsonAddEventTypeRequestLocationsInnerInnerOneOf) == "{}" { // empty struct
			dst.AddEventTypeRequestLocationsInnerInnerOneOf = nil
		} else {
			match++
		}
	} else {
		dst.AddEventTypeRequestLocationsInnerInnerOneOf = nil
	}

	// try to unmarshal data into AddEventTypeRequestLocationsInnerInnerOneOf1
	err = newStrictDecoder(data).Decode(&dst.AddEventTypeRequestLocationsInnerInnerOneOf1)
	if err == nil {
		jsonAddEventTypeRequestLocationsInnerInnerOneOf1, _ := json.Marshal(dst.AddEventTypeRequestLocationsInnerInnerOneOf1)
		if string(jsonAddEventTypeRequestLocationsInnerInnerOneOf1) == "{}" { // empty struct
			dst.AddEventTypeRequestLocationsInnerInnerOneOf1 = nil
		} else {
			match++
		}
	} else {
		dst.AddEventTypeRequestLocationsInnerInnerOneOf1 = nil
	}

	// try to unmarshal data into AddEventTypeRequestLocationsInnerInnerOneOf2
	err = newStrictDecoder(data).Decode(&dst.AddEventTypeRequestLocationsInnerInnerOneOf2)
	if err == nil {
		jsonAddEventTypeRequestLocationsInnerInnerOneOf2, _ := json.Marshal(dst.AddEventTypeRequestLocationsInnerInnerOneOf2)
		if string(jsonAddEventTypeRequestLocationsInnerInnerOneOf2) == "{}" { // empty struct
			dst.AddEventTypeRequestLocationsInnerInnerOneOf2 = nil
		} else {
			match++
		}
	} else {
		dst.AddEventTypeRequestLocationsInnerInnerOneOf2 = nil
	}

	// try to unmarshal data into AddEventTypeRequestLocationsInnerInnerOneOf3
	err = newStrictDecoder(data).Decode(&dst.AddEventTypeRequestLocationsInnerInnerOneOf3)
	if err == nil {
		jsonAddEventTypeRequestLocationsInnerInnerOneOf3, _ := json.Marshal(dst.AddEventTypeRequestLocationsInnerInnerOneOf3)
		if string(jsonAddEventTypeRequestLocationsInnerInnerOneOf3) == "{}" { // empty struct
			dst.AddEventTypeRequestLocationsInnerInnerOneOf3 = nil
		} else {
			match++
		}
	} else {
		dst.AddEventTypeRequestLocationsInnerInnerOneOf3 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddEventTypeRequestLocationsInnerInnerOneOf = nil
		dst.AddEventTypeRequestLocationsInnerInnerOneOf1 = nil
		dst.AddEventTypeRequestLocationsInnerInnerOneOf2 = nil
		dst.AddEventTypeRequestLocationsInnerInnerOneOf3 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddEventTypeRequestLocationsInnerInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddEventTypeRequestLocationsInnerInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddEventTypeRequestLocationsInnerInner) MarshalJSON() ([]byte, error) {
	if src.AddEventTypeRequestLocationsInnerInnerOneOf != nil {
		return json.Marshal(&src.AddEventTypeRequestLocationsInnerInnerOneOf)
	}

	if src.AddEventTypeRequestLocationsInnerInnerOneOf1 != nil {
		return json.Marshal(&src.AddEventTypeRequestLocationsInnerInnerOneOf1)
	}

	if src.AddEventTypeRequestLocationsInnerInnerOneOf2 != nil {
		return json.Marshal(&src.AddEventTypeRequestLocationsInnerInnerOneOf2)
	}

	if src.AddEventTypeRequestLocationsInnerInnerOneOf3 != nil {
		return json.Marshal(&src.AddEventTypeRequestLocationsInnerInnerOneOf3)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddEventTypeRequestLocationsInnerInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AddEventTypeRequestLocationsInnerInnerOneOf != nil {
		return obj.AddEventTypeRequestLocationsInnerInnerOneOf
	}

	if obj.AddEventTypeRequestLocationsInnerInnerOneOf1 != nil {
		return obj.AddEventTypeRequestLocationsInnerInnerOneOf1
	}

	if obj.AddEventTypeRequestLocationsInnerInnerOneOf2 != nil {
		return obj.AddEventTypeRequestLocationsInnerInnerOneOf2
	}

	if obj.AddEventTypeRequestLocationsInnerInnerOneOf3 != nil {
		return obj.AddEventTypeRequestLocationsInnerInnerOneOf3
	}

	// all schemas are nil
	return nil
}

type NullableAddEventTypeRequestLocationsInnerInner struct {
	value *AddEventTypeRequestLocationsInnerInner
	isSet bool
}

func (v NullableAddEventTypeRequestLocationsInnerInner) Get() *AddEventTypeRequestLocationsInnerInner {
	return v.value
}

func (v *NullableAddEventTypeRequestLocationsInnerInner) Set(val *AddEventTypeRequestLocationsInnerInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAddEventTypeRequestLocationsInnerInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAddEventTypeRequestLocationsInnerInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddEventTypeRequestLocationsInnerInner(val *AddEventTypeRequestLocationsInnerInner) *NullableAddEventTypeRequestLocationsInnerInner {
	return &NullableAddEventTypeRequestLocationsInnerInner{value: val, isSet: true}
}

func (v NullableAddEventTypeRequestLocationsInnerInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddEventTypeRequestLocationsInnerInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


