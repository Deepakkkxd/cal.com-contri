/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the AddScheduleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddScheduleRequest{}

// AddScheduleRequest struct for AddScheduleRequest
type AddScheduleRequest struct {
	// Name of the schedule
	Name string `json:"name"`
	// The timeZone for this schedule
	TimeZone string `json:"timeZone"`
}

type _AddScheduleRequest AddScheduleRequest

// NewAddScheduleRequest instantiates a new AddScheduleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddScheduleRequest(name string, timeZone string) *AddScheduleRequest {
	this := AddScheduleRequest{}
	this.Name = name
	this.TimeZone = timeZone
	return &this
}

// NewAddScheduleRequestWithDefaults instantiates a new AddScheduleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddScheduleRequestWithDefaults() *AddScheduleRequest {
	this := AddScheduleRequest{}
	return &this
}

// GetName returns the Name field value
func (o *AddScheduleRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddScheduleRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddScheduleRequest) SetName(v string) {
	o.Name = v
}

// GetTimeZone returns the TimeZone field value
func (o *AddScheduleRequest) GetTimeZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value
// and a boolean to check if the value has been set.
func (o *AddScheduleRequest) GetTimeZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeZone, true
}

// SetTimeZone sets field value
func (o *AddScheduleRequest) SetTimeZone(v string) {
	o.TimeZone = v
}

func (o AddScheduleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddScheduleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["timeZone"] = o.TimeZone
	return toSerialize, nil
}

func (o *AddScheduleRequest) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"timeZone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddScheduleRequest := _AddScheduleRequest{}

	err = json.Unmarshal(bytes, &varAddScheduleRequest)

	if err != nil {
		return err
	}

	*o = AddScheduleRequest(varAddScheduleRequest)

	return err
}

type NullableAddScheduleRequest struct {
	value *AddScheduleRequest
	isSet bool
}

func (v NullableAddScheduleRequest) Get() *AddScheduleRequest {
	return v.value
}

func (v *NullableAddScheduleRequest) Set(val *AddScheduleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddScheduleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddScheduleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddScheduleRequest(val *AddScheduleRequest) *NullableAddScheduleRequest {
	return &NullableAddScheduleRequest{value: val, isSet: true}
}

func (v NullableAddScheduleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddScheduleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


