/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Booking type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Booking{}

// Booking struct for Booking
type Booking struct {
	Id *float32 `json:"id,omitempty"`
	Description *string `json:"description,omitempty"`
	EventTypeId *float32 `json:"eventTypeId,omitempty"`
	Uid *string `json:"uid,omitempty"`
	Title *string `json:"title,omitempty"`
	StartTime *time.Time `json:"startTime,omitempty"`
	EndTime *time.Time `json:"endTime,omitempty"`
	TimeZone *string `json:"timeZone,omitempty"`
	Attendees []BookingAttendeesInner `json:"attendees,omitempty"`
	User *BookingAttendeesInner `json:"user,omitempty"`
	Payment []BookingPaymentInner `json:"payment,omitempty"`
}

// NewBooking instantiates a new Booking object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBooking() *Booking {
	this := Booking{}
	return &this
}

// NewBookingWithDefaults instantiates a new Booking object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookingWithDefaults() *Booking {
	this := Booking{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Booking) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Booking) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Booking) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *Booking) SetId(v float32) {
	o.Id = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Booking) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Booking) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Booking) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Booking) SetDescription(v string) {
	o.Description = &v
}

// GetEventTypeId returns the EventTypeId field value if set, zero value otherwise.
func (o *Booking) GetEventTypeId() float32 {
	if o == nil || IsNil(o.EventTypeId) {
		var ret float32
		return ret
	}
	return *o.EventTypeId
}

// GetEventTypeIdOk returns a tuple with the EventTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Booking) GetEventTypeIdOk() (*float32, bool) {
	if o == nil || IsNil(o.EventTypeId) {
		return nil, false
	}
	return o.EventTypeId, true
}

// HasEventTypeId returns a boolean if a field has been set.
func (o *Booking) HasEventTypeId() bool {
	if o != nil && !IsNil(o.EventTypeId) {
		return true
	}

	return false
}

// SetEventTypeId gets a reference to the given float32 and assigns it to the EventTypeId field.
func (o *Booking) SetEventTypeId(v float32) {
	o.EventTypeId = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *Booking) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Booking) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *Booking) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *Booking) SetUid(v string) {
	o.Uid = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Booking) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Booking) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Booking) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Booking) SetTitle(v string) {
	o.Title = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *Booking) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Booking) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *Booking) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *Booking) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *Booking) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Booking) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *Booking) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *Booking) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *Booking) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Booking) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *Booking) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *Booking) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetAttendees returns the Attendees field value if set, zero value otherwise.
func (o *Booking) GetAttendees() []BookingAttendeesInner {
	if o == nil || IsNil(o.Attendees) {
		var ret []BookingAttendeesInner
		return ret
	}
	return o.Attendees
}

// GetAttendeesOk returns a tuple with the Attendees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Booking) GetAttendeesOk() ([]BookingAttendeesInner, bool) {
	if o == nil || IsNil(o.Attendees) {
		return nil, false
	}
	return o.Attendees, true
}

// HasAttendees returns a boolean if a field has been set.
func (o *Booking) HasAttendees() bool {
	if o != nil && !IsNil(o.Attendees) {
		return true
	}

	return false
}

// SetAttendees gets a reference to the given []BookingAttendeesInner and assigns it to the Attendees field.
func (o *Booking) SetAttendees(v []BookingAttendeesInner) {
	o.Attendees = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *Booking) GetUser() BookingAttendeesInner {
	if o == nil || IsNil(o.User) {
		var ret BookingAttendeesInner
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Booking) GetUserOk() (*BookingAttendeesInner, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *Booking) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given BookingAttendeesInner and assigns it to the User field.
func (o *Booking) SetUser(v BookingAttendeesInner) {
	o.User = &v
}

// GetPayment returns the Payment field value if set, zero value otherwise.
func (o *Booking) GetPayment() []BookingPaymentInner {
	if o == nil || IsNil(o.Payment) {
		var ret []BookingPaymentInner
		return ret
	}
	return o.Payment
}

// GetPaymentOk returns a tuple with the Payment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Booking) GetPaymentOk() ([]BookingPaymentInner, bool) {
	if o == nil || IsNil(o.Payment) {
		return nil, false
	}
	return o.Payment, true
}

// HasPayment returns a boolean if a field has been set.
func (o *Booking) HasPayment() bool {
	if o != nil && !IsNil(o.Payment) {
		return true
	}

	return false
}

// SetPayment gets a reference to the given []BookingPaymentInner and assigns it to the Payment field.
func (o *Booking) SetPayment(v []BookingPaymentInner) {
	o.Payment = v
}

func (o Booking) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Booking) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EventTypeId) {
		toSerialize["eventTypeId"] = o.EventTypeId
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if !IsNil(o.Attendees) {
		toSerialize["attendees"] = o.Attendees
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Payment) {
		toSerialize["payment"] = o.Payment
	}
	return toSerialize, nil
}

type NullableBooking struct {
	value *Booking
	isSet bool
}

func (v NullableBooking) Get() *Booking {
	return v.value
}

func (v *NullableBooking) Set(val *Booking) {
	v.value = val
	v.isSet = true
}

func (v NullableBooking) IsSet() bool {
	return v.isSet
}

func (v *NullableBooking) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBooking(val *Booking) *NullableBooking {
	return &NullableBooking{value: val, isSet: true}
}

func (v NullableBooking) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBooking) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


