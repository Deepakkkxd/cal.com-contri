/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BookingPaymentInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BookingPaymentInner{}

// BookingPaymentInner struct for BookingPaymentInner
type BookingPaymentInner struct {
	Id *float32 `json:"id,omitempty"`
	Success *bool `json:"success,omitempty"`
	PaymentOption *string `json:"paymentOption,omitempty"`
}

// NewBookingPaymentInner instantiates a new BookingPaymentInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBookingPaymentInner() *BookingPaymentInner {
	this := BookingPaymentInner{}
	return &this
}

// NewBookingPaymentInnerWithDefaults instantiates a new BookingPaymentInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBookingPaymentInnerWithDefaults() *BookingPaymentInner {
	this := BookingPaymentInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BookingPaymentInner) GetId() float32 {
	if o == nil || IsNil(o.Id) {
		var ret float32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingPaymentInner) GetIdOk() (*float32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BookingPaymentInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given float32 and assigns it to the Id field.
func (o *BookingPaymentInner) SetId(v float32) {
	o.Id = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *BookingPaymentInner) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingPaymentInner) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *BookingPaymentInner) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *BookingPaymentInner) SetSuccess(v bool) {
	o.Success = &v
}

// GetPaymentOption returns the PaymentOption field value if set, zero value otherwise.
func (o *BookingPaymentInner) GetPaymentOption() string {
	if o == nil || IsNil(o.PaymentOption) {
		var ret string
		return ret
	}
	return *o.PaymentOption
}

// GetPaymentOptionOk returns a tuple with the PaymentOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BookingPaymentInner) GetPaymentOptionOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentOption) {
		return nil, false
	}
	return o.PaymentOption, true
}

// HasPaymentOption returns a boolean if a field has been set.
func (o *BookingPaymentInner) HasPaymentOption() bool {
	if o != nil && !IsNil(o.PaymentOption) {
		return true
	}

	return false
}

// SetPaymentOption gets a reference to the given string and assigns it to the PaymentOption field.
func (o *BookingPaymentInner) SetPaymentOption(v string) {
	o.PaymentOption = &v
}

func (o BookingPaymentInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BookingPaymentInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.PaymentOption) {
		toSerialize["paymentOption"] = o.PaymentOption
	}
	return toSerialize, nil
}

type NullableBookingPaymentInner struct {
	value *BookingPaymentInner
	isSet bool
}

func (v NullableBookingPaymentInner) Get() *BookingPaymentInner {
	return v.value
}

func (v *NullableBookingPaymentInner) Set(val *BookingPaymentInner) {
	v.value = val
	v.isSet = true
}

func (v NullableBookingPaymentInner) IsSet() bool {
	return v.isSet
}

func (v *NullableBookingPaymentInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBookingPaymentInner(val *BookingPaymentInner) *NullableBookingPaymentInner {
	return &NullableBookingPaymentInner{value: val, isSet: true}
}

func (v NullableBookingPaymentInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBookingPaymentInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


