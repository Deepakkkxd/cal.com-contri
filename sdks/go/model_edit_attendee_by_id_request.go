/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EditAttendeeByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditAttendeeByIdRequest{}

// EditAttendeeByIdRequest struct for EditAttendeeByIdRequest
type EditAttendeeByIdRequest struct {
	Email *string `json:"email,omitempty"`
	Name *string `json:"name,omitempty"`
	TimeZone *string `json:"timeZone,omitempty"`
}

// NewEditAttendeeByIdRequest instantiates a new EditAttendeeByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditAttendeeByIdRequest() *EditAttendeeByIdRequest {
	this := EditAttendeeByIdRequest{}
	return &this
}

// NewEditAttendeeByIdRequestWithDefaults instantiates a new EditAttendeeByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditAttendeeByIdRequestWithDefaults() *EditAttendeeByIdRequest {
	this := EditAttendeeByIdRequest{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *EditAttendeeByIdRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditAttendeeByIdRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *EditAttendeeByIdRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *EditAttendeeByIdRequest) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EditAttendeeByIdRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditAttendeeByIdRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EditAttendeeByIdRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EditAttendeeByIdRequest) SetName(v string) {
	o.Name = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *EditAttendeeByIdRequest) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditAttendeeByIdRequest) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *EditAttendeeByIdRequest) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *EditAttendeeByIdRequest) SetTimeZone(v string) {
	o.TimeZone = &v
}

func (o EditAttendeeByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditAttendeeByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	return toSerialize, nil
}

type NullableEditAttendeeByIdRequest struct {
	value *EditAttendeeByIdRequest
	isSet bool
}

func (v NullableEditAttendeeByIdRequest) Get() *EditAttendeeByIdRequest {
	return v.value
}

func (v *NullableEditAttendeeByIdRequest) Set(val *EditAttendeeByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEditAttendeeByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEditAttendeeByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditAttendeeByIdRequest(val *EditAttendeeByIdRequest) *NullableEditAttendeeByIdRequest {
	return &NullableEditAttendeeByIdRequest{value: val, isSet: true}
}

func (v NullableEditAttendeeByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditAttendeeByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


