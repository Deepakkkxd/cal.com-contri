/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the EditBookingByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditBookingByIdRequest{}

// EditBookingByIdRequest struct for EditBookingByIdRequest
type EditBookingByIdRequest struct {
	// Booking event title
	Title *string `json:"title,omitempty"`
	// Start time of the Event
	Start *time.Time `json:"start,omitempty"`
	// End time of the Event
	End *time.Time `json:"end,omitempty"`
	// Acceptable values one of [\"ACCEPTED\", \"PENDING\", \"CANCELLED\", \"REJECTED\"]
	Status *string `json:"status,omitempty"`
	// Description of the meeting
	Description *string `json:"description,omitempty"`
}

// NewEditBookingByIdRequest instantiates a new EditBookingByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditBookingByIdRequest() *EditBookingByIdRequest {
	this := EditBookingByIdRequest{}
	return &this
}

// NewEditBookingByIdRequestWithDefaults instantiates a new EditBookingByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditBookingByIdRequestWithDefaults() *EditBookingByIdRequest {
	this := EditBookingByIdRequest{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *EditBookingByIdRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBookingByIdRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *EditBookingByIdRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *EditBookingByIdRequest) SetTitle(v string) {
	o.Title = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *EditBookingByIdRequest) GetStart() time.Time {
	if o == nil || IsNil(o.Start) {
		var ret time.Time
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBookingByIdRequest) GetStartOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *EditBookingByIdRequest) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given time.Time and assigns it to the Start field.
func (o *EditBookingByIdRequest) SetStart(v time.Time) {
	o.Start = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *EditBookingByIdRequest) GetEnd() time.Time {
	if o == nil || IsNil(o.End) {
		var ret time.Time
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBookingByIdRequest) GetEndOk() (*time.Time, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *EditBookingByIdRequest) HasEnd() bool {
	if o != nil && !IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given time.Time and assigns it to the End field.
func (o *EditBookingByIdRequest) SetEnd(v time.Time) {
	o.End = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EditBookingByIdRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBookingByIdRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EditBookingByIdRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *EditBookingByIdRequest) SetStatus(v string) {
	o.Status = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EditBookingByIdRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBookingByIdRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EditBookingByIdRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EditBookingByIdRequest) SetDescription(v string) {
	o.Description = &v
}

func (o EditBookingByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditBookingByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.End) {
		toSerialize["end"] = o.End
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableEditBookingByIdRequest struct {
	value *EditBookingByIdRequest
	isSet bool
}

func (v NullableEditBookingByIdRequest) Get() *EditBookingByIdRequest {
	return v.value
}

func (v *NullableEditBookingByIdRequest) Set(val *EditBookingByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEditBookingByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEditBookingByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditBookingByIdRequest(val *EditBookingByIdRequest) *NullableEditBookingByIdRequest {
	return &NullableEditBookingByIdRequest{value: val, isSet: true}
}

func (v NullableEditBookingByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditBookingByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


