/*
@calcom/api: Public API for Cal.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EditBookingReferenceByIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EditBookingReferenceByIdRequest{}

// EditBookingReferenceByIdRequest struct for EditBookingReferenceByIdRequest
type EditBookingReferenceByIdRequest struct {
	Type *string `json:"type,omitempty"`
	MeetingId *string `json:"meetingId,omitempty"`
	MeetingPassword *string `json:"meetingPassword,omitempty"`
	ExternalCalendarId *string `json:"externalCalendarId,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	CredentialId *int32 `json:"credentialId,omitempty"`
}

// NewEditBookingReferenceByIdRequest instantiates a new EditBookingReferenceByIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEditBookingReferenceByIdRequest() *EditBookingReferenceByIdRequest {
	this := EditBookingReferenceByIdRequest{}
	return &this
}

// NewEditBookingReferenceByIdRequestWithDefaults instantiates a new EditBookingReferenceByIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEditBookingReferenceByIdRequestWithDefaults() *EditBookingReferenceByIdRequest {
	this := EditBookingReferenceByIdRequest{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EditBookingReferenceByIdRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBookingReferenceByIdRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EditBookingReferenceByIdRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EditBookingReferenceByIdRequest) SetType(v string) {
	o.Type = &v
}

// GetMeetingId returns the MeetingId field value if set, zero value otherwise.
func (o *EditBookingReferenceByIdRequest) GetMeetingId() string {
	if o == nil || IsNil(o.MeetingId) {
		var ret string
		return ret
	}
	return *o.MeetingId
}

// GetMeetingIdOk returns a tuple with the MeetingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBookingReferenceByIdRequest) GetMeetingIdOk() (*string, bool) {
	if o == nil || IsNil(o.MeetingId) {
		return nil, false
	}
	return o.MeetingId, true
}

// HasMeetingId returns a boolean if a field has been set.
func (o *EditBookingReferenceByIdRequest) HasMeetingId() bool {
	if o != nil && !IsNil(o.MeetingId) {
		return true
	}

	return false
}

// SetMeetingId gets a reference to the given string and assigns it to the MeetingId field.
func (o *EditBookingReferenceByIdRequest) SetMeetingId(v string) {
	o.MeetingId = &v
}

// GetMeetingPassword returns the MeetingPassword field value if set, zero value otherwise.
func (o *EditBookingReferenceByIdRequest) GetMeetingPassword() string {
	if o == nil || IsNil(o.MeetingPassword) {
		var ret string
		return ret
	}
	return *o.MeetingPassword
}

// GetMeetingPasswordOk returns a tuple with the MeetingPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBookingReferenceByIdRequest) GetMeetingPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.MeetingPassword) {
		return nil, false
	}
	return o.MeetingPassword, true
}

// HasMeetingPassword returns a boolean if a field has been set.
func (o *EditBookingReferenceByIdRequest) HasMeetingPassword() bool {
	if o != nil && !IsNil(o.MeetingPassword) {
		return true
	}

	return false
}

// SetMeetingPassword gets a reference to the given string and assigns it to the MeetingPassword field.
func (o *EditBookingReferenceByIdRequest) SetMeetingPassword(v string) {
	o.MeetingPassword = &v
}

// GetExternalCalendarId returns the ExternalCalendarId field value if set, zero value otherwise.
func (o *EditBookingReferenceByIdRequest) GetExternalCalendarId() string {
	if o == nil || IsNil(o.ExternalCalendarId) {
		var ret string
		return ret
	}
	return *o.ExternalCalendarId
}

// GetExternalCalendarIdOk returns a tuple with the ExternalCalendarId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBookingReferenceByIdRequest) GetExternalCalendarIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalCalendarId) {
		return nil, false
	}
	return o.ExternalCalendarId, true
}

// HasExternalCalendarId returns a boolean if a field has been set.
func (o *EditBookingReferenceByIdRequest) HasExternalCalendarId() bool {
	if o != nil && !IsNil(o.ExternalCalendarId) {
		return true
	}

	return false
}

// SetExternalCalendarId gets a reference to the given string and assigns it to the ExternalCalendarId field.
func (o *EditBookingReferenceByIdRequest) SetExternalCalendarId(v string) {
	o.ExternalCalendarId = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *EditBookingReferenceByIdRequest) GetDeleted() bool {
	if o == nil || IsNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBookingReferenceByIdRequest) GetDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *EditBookingReferenceByIdRequest) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *EditBookingReferenceByIdRequest) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetCredentialId returns the CredentialId field value if set, zero value otherwise.
func (o *EditBookingReferenceByIdRequest) GetCredentialId() int32 {
	if o == nil || IsNil(o.CredentialId) {
		var ret int32
		return ret
	}
	return *o.CredentialId
}

// GetCredentialIdOk returns a tuple with the CredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EditBookingReferenceByIdRequest) GetCredentialIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CredentialId) {
		return nil, false
	}
	return o.CredentialId, true
}

// HasCredentialId returns a boolean if a field has been set.
func (o *EditBookingReferenceByIdRequest) HasCredentialId() bool {
	if o != nil && !IsNil(o.CredentialId) {
		return true
	}

	return false
}

// SetCredentialId gets a reference to the given int32 and assigns it to the CredentialId field.
func (o *EditBookingReferenceByIdRequest) SetCredentialId(v int32) {
	o.CredentialId = &v
}

func (o EditBookingReferenceByIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EditBookingReferenceByIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.MeetingId) {
		toSerialize["meetingId"] = o.MeetingId
	}
	if !IsNil(o.MeetingPassword) {
		toSerialize["meetingPassword"] = o.MeetingPassword
	}
	if !IsNil(o.ExternalCalendarId) {
		toSerialize["externalCalendarId"] = o.ExternalCalendarId
	}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !IsNil(o.CredentialId) {
		toSerialize["credentialId"] = o.CredentialId
	}
	return toSerialize, nil
}

type NullableEditBookingReferenceByIdRequest struct {
	value *EditBookingReferenceByIdRequest
	isSet bool
}

func (v NullableEditBookingReferenceByIdRequest) Get() *EditBookingReferenceByIdRequest {
	return v.value
}

func (v *NullableEditBookingReferenceByIdRequest) Set(val *EditBookingReferenceByIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEditBookingReferenceByIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEditBookingReferenceByIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEditBookingReferenceByIdRequest(val *EditBookingReferenceByIdRequest) *NullableEditBookingReferenceByIdRequest {
	return &NullableEditBookingReferenceByIdRequest{value: val, isSet: true}
}

func (v NullableEditBookingReferenceByIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEditBookingReferenceByIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


