/*
@calcom/api: Public API for Cal.com

Testing SelectedCalendarsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_SelectedCalendarsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SelectedCalendarsAPIService EditSelectedCalendarById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var userId int32
		var externalId string
		var integration string

		httpRes, err := apiClient.SelectedCalendarsAPI.EditSelectedCalendarById(context.Background(), userId, externalId, integration).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SelectedCalendarsAPIService GetSelectedCalendarById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var userId int32
		var externalId string
		var integration string

		httpRes, err := apiClient.SelectedCalendarsAPI.GetSelectedCalendarById(context.Background(), userId, externalId, integration).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SelectedCalendarsAPIService ListSelectedCalendars", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.SelectedCalendarsAPI.ListSelectedCalendars(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SelectedCalendarsAPIService RemoveSelectedCalendarById", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var userId int32
		var externalId int32
		var integration string

		httpRes, err := apiClient.SelectedCalendarsAPI.RemoveSelectedCalendarById(context.Background(), userId, externalId, integration).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SelectedCalendarsAPIService SelectedCalendarsPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.SelectedCalendarsAPI.SelectedCalendarsPost(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
