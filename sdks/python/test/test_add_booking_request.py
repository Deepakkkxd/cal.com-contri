# coding: utf-8

"""
    @calcom/api: Public API for Cal.com

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.add_booking_request import AddBookingRequest

class TestAddBookingRequest(unittest.TestCase):
    """AddBookingRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddBookingRequest:
        """Test AddBookingRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddBookingRequest`
        """
        model = AddBookingRequest()
        if include_optional:
            return AddBookingRequest(
                event_type_id = 56,
                start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                responses = openapi_client.models.add_booking_request_responses.addBooking_request_responses(
                    name = '', 
                    email = '', 
                    location = openapi_client.models.add_booking_request_responses_location.addBooking_request_responses_location(
                        option_value = '', 
                        value = '', ), ),
                metadata = None,
                time_zone = '',
                language = '',
                title = '',
                recurring_event_id = 56,
                description = '',
                status = '',
                seats_per_time_slot = 56,
                seats_show_attendees = True,
                seats_show_availability_count = True,
                sms_reminder_number = 1.337
            )
        else:
            return AddBookingRequest(
                event_type_id = 56,
                start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                responses = openapi_client.models.add_booking_request_responses.addBooking_request_responses(
                    name = '', 
                    email = '', 
                    location = openapi_client.models.add_booking_request_responses_location.addBooking_request_responses_location(
                        option_value = '', 
                        value = '', ), ),
                metadata = None,
                time_zone = '',
                language = '',
        )
        """

    def testAddBookingRequest(self):
        """Test AddBookingRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
