/* tslint:disable */
/* eslint-disable */
/**
 * @calcom/api: Public API for Cal.com
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddBookingReferenceRequest
 */
export interface AddBookingReferenceRequest {
    /**
     * 
     * @type {string}
     * @memberof AddBookingReferenceRequest
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof AddBookingReferenceRequest
     */
    uid: string;
    /**
     * 
     * @type {string}
     * @memberof AddBookingReferenceRequest
     */
    meetingId?: string;
    /**
     * 
     * @type {string}
     * @memberof AddBookingReferenceRequest
     */
    meetingPassword?: string;
    /**
     * 
     * @type {string}
     * @memberof AddBookingReferenceRequest
     */
    meetingUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AddBookingReferenceRequest
     */
    bookingId?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AddBookingReferenceRequest
     */
    externalCalendarId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AddBookingReferenceRequest
     */
    deleted?: boolean;
    /**
     * 
     * @type {number}
     * @memberof AddBookingReferenceRequest
     */
    credentialId?: number;
}

/**
 * Check if a given object implements the AddBookingReferenceRequest interface.
 */
export function instanceOfAddBookingReferenceRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "uid" in value;

    return isInstance;
}

export function AddBookingReferenceRequestFromJSON(json: any): AddBookingReferenceRequest {
    return AddBookingReferenceRequestFromJSONTyped(json, false);
}

export function AddBookingReferenceRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddBookingReferenceRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'uid': json['uid'],
        'meetingId': !exists(json, 'meetingId') ? undefined : json['meetingId'],
        'meetingPassword': !exists(json, 'meetingPassword') ? undefined : json['meetingPassword'],
        'meetingUrl': !exists(json, 'meetingUrl') ? undefined : json['meetingUrl'],
        'bookingId': !exists(json, 'bookingId') ? undefined : json['bookingId'],
        'externalCalendarId': !exists(json, 'externalCalendarId') ? undefined : json['externalCalendarId'],
        'deleted': !exists(json, 'deleted') ? undefined : json['deleted'],
        'credentialId': !exists(json, 'credentialId') ? undefined : json['credentialId'],
    };
}

export function AddBookingReferenceRequestToJSON(value?: AddBookingReferenceRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'uid': value.uid,
        'meetingId': value.meetingId,
        'meetingPassword': value.meetingPassword,
        'meetingUrl': value.meetingUrl,
        'bookingId': value.bookingId,
        'externalCalendarId': value.externalCalendarId,
        'deleted': value.deleted,
        'credentialId': value.credentialId,
    };
}

