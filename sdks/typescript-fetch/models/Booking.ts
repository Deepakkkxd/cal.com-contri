/* tslint:disable */
/* eslint-disable */
/**
 * @calcom/api: Public API for Cal.com
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BookingAttendeesInner } from './BookingAttendeesInner';
import {
    BookingAttendeesInnerFromJSON,
    BookingAttendeesInnerFromJSONTyped,
    BookingAttendeesInnerToJSON,
} from './BookingAttendeesInner';
import type { BookingPaymentInner } from './BookingPaymentInner';
import {
    BookingPaymentInnerFromJSON,
    BookingPaymentInnerFromJSONTyped,
    BookingPaymentInnerToJSON,
} from './BookingPaymentInner';

/**
 * 
 * @export
 * @interface Booking
 */
export interface Booking {
    /**
     * 
     * @type {number}
     * @memberof Booking
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Booking
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof Booking
     */
    eventTypeId?: number;
    /**
     * 
     * @type {string}
     * @memberof Booking
     */
    uid?: string;
    /**
     * 
     * @type {string}
     * @memberof Booking
     */
    title?: string;
    /**
     * 
     * @type {Date}
     * @memberof Booking
     */
    startTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Booking
     */
    endTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof Booking
     */
    timeZone?: string;
    /**
     * 
     * @type {Array<BookingAttendeesInner>}
     * @memberof Booking
     */
    attendees?: Array<BookingAttendeesInner>;
    /**
     * 
     * @type {BookingAttendeesInner}
     * @memberof Booking
     */
    user?: BookingAttendeesInner;
    /**
     * 
     * @type {Array<BookingPaymentInner>}
     * @memberof Booking
     */
    payment?: Array<BookingPaymentInner>;
}

/**
 * Check if a given object implements the Booking interface.
 */
export function instanceOfBooking(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BookingFromJSON(json: any): Booking {
    return BookingFromJSONTyped(json, false);
}

export function BookingFromJSONTyped(json: any, ignoreDiscriminator: boolean): Booking {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'eventTypeId': !exists(json, 'eventTypeId') ? undefined : json['eventTypeId'],
        'uid': !exists(json, 'uid') ? undefined : json['uid'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'startTime': !exists(json, 'startTime') ? undefined : (new Date(json['startTime'])),
        'endTime': !exists(json, 'endTime') ? undefined : (new Date(json['endTime'])),
        'timeZone': !exists(json, 'timeZone') ? undefined : json['timeZone'],
        'attendees': !exists(json, 'attendees') ? undefined : ((json['attendees'] as Array<any>).map(BookingAttendeesInnerFromJSON)),
        'user': !exists(json, 'user') ? undefined : BookingAttendeesInnerFromJSON(json['user']),
        'payment': !exists(json, 'payment') ? undefined : ((json['payment'] as Array<any>).map(BookingPaymentInnerFromJSON)),
    };
}

export function BookingToJSON(value?: Booking | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'description': value.description,
        'eventTypeId': value.eventTypeId,
        'uid': value.uid,
        'title': value.title,
        'startTime': value.startTime === undefined ? undefined : (value.startTime.toISOString()),
        'endTime': value.endTime === undefined ? undefined : (value.endTime.toISOString()),
        'timeZone': value.timeZone,
        'attendees': value.attendees === undefined ? undefined : ((value.attendees as Array<any>).map(BookingAttendeesInnerToJSON)),
        'user': BookingAttendeesInnerToJSON(value.user),
        'payment': value.payment === undefined ? undefined : ((value.payment as Array<any>).map(BookingPaymentInnerToJSON)),
    };
}

